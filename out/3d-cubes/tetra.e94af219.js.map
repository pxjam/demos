{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./3d-cubes/presets/tetra.js","./3d-cubes/geom/Line.js","./3d-cubes/geom/Point.js","./3d-cubes/modules/mouse.js","./3d-cubes/geom/Tetra.js","./3d-cubes/tetra.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","export default [\n    {\"firstObjectSize\":89,\"objectsCount\":16,\"duplicateFactor\":0.4,\"duplicateMethod\":\"sum\",\"autorotate\":true,\"autorotateSpeed\":5,\"revertInnerRotate\":false,\"innerRotateSpeed\":10,\"mouseRotatePower\":28,\"mouseRotateInertia\":1000,\"mouseMagnetic\":1,\"centerX\":0.7,\"centerY\":0.32,\"perspective\":1000,\"size\":1.2,\"framesOverlay\":0,\"gradCenter\":{\"x\":0.37,\"y\":0.37},\"gradRadius\":0.6,\"gradMiddlePoint\":0.7,\"gradColor1\":{\"r\":191.25,\"g\":127.5,\"b\":255},\"gradColor2\":{\"r\":91.8,\"g\":200.6,\"b\":255},\"gradColor3\":{\"r\":153,\"g\":255,\"b\":153},\"gradPreview\":false,\"preset\":0},\n    // {\"firstObjectSize\":100,\"objectsCount\":12,\"duplicateFactor\":0.4,\"duplicateMethod\":\"sum\",\"autorotate\":true,\"autorotateSpeed\":10,\"revertInnerRotate\":false,\"innerRotateSpeed\":15,\"mouseRotateInertia\":1000,\"centerX\":0.5,\"centerY\":0.5,\"perspective\":1000,\"size\":1.2,\"framesOverlay\":0,\"gradCenter\":{\"x\":0.37,\"y\":0.37},\"gradRadius\":0.7,\"gradMiddlePoint\":0.71,\"gradColor1\":{\"r\":186,\"g\":0,\"b\":250},\"gradColor2\":{\"r\":0,\"g\":164,\"b\":235},\"gradColor3\":{\"r\":152,\"g\":255,\"b\":71},\"gradPreview\":false,\"preset\":0},\n]","let drawnLines = []\n\nexport default class Line {\n    constructor(point0, point1) {\n        this.point0 = point0\n        this.point1 = point1\n\n        this.sum = point0.X + point0.Y + point1.X + point1.Y\n    }\n\n    static eraseAll() {\n        drawnLines = []\n    }\n\n    draw = (ctx) => {\n        this.sum = this.point0.X + this.point0.Y + this.point1.X + this.point1.Y\n\n        if (drawnLines.indexOf(this.sum) === -1) {\n            drawnLines.push(this.sum)\n            ctx.globalAlpha = 1\n        } else {\n            ctx.globalAlpha = 0\n        }\n\n        ctx.beginPath()\n\n        ctx.moveTo(this.point0.X, this.point0.Y)\n        ctx.lineTo(this.point1.X, this.point1.Y)\n        ctx.closePath()\n\n        ctx.stroke()\n    }\n}\n","export default class Point {\n    constructor(xyz, parent) {\n        if (parent) this.parent = parent\n\n        this.xo = xyz[0]\n        this.yo = xyz[1]\n        this.zo = xyz[2]\n    }\n}\n","let ww = window.innerWidth\nlet wh = window.innerHeight\nlet clientX = ww / 2\nlet clientY = wh / 2\n\nexport let mouse = {\n    x: clientX,\n    y: clientY,\n    inertia: 0.05,\n    cursorMode: '' // bloat repel attract\n}\n\nwindow.addEventListener('resize', () => {\n    ww = window.innerWidth\n    wh = window.innerHeight\n})\n\nlet mousemoveTimer\nlet lastClientX\nlet lastClientY\n\nlet shouldStop = false\n\nlet update = (targetX, targetY) => {\n    clientX = inertiaTo(clientX, targetX)\n    clientY = inertiaTo(clientY, targetY)\n\n    mouse.x = clientX\n    mouse.y = clientY\n\n\n    /*\n    mouse.cx = clientX - ww / 2\n    mouse.cy = clientY - wh / 2\n    */\n    /*\n    mouse.progressX = (mouse.x - ww / 2) / ww\n    mouse.progressY = (mouse.y - wh / 2) / wh\n    */\n\n    // window.dispatchEvent(\n    //     new CustomEvent('MouseMove', {\n    //         detail: mouse\n    //     })\n    // )\n\n    if (!shouldStop) {\n        mousemoveTimer = requestAnimationFrame(() => update(lastClientX, lastClientY))\n    }\n}\n\nlet inertiaTo = (current, target) => {\n    let distToGo = target - current\n    let newPos = current + (distToGo * mouse.inertia)\n\n    if (Math.abs(distToGo) < 5) {\n        cancelAnimationFrame(mousemoveTimer)\n        shouldStop = true\n        newPos = target\n    }\n\n    return newPos\n}\n\nfunction mouseMoveHandler(e) {\n    e.preventDefault()\n\n    cancelAnimationFrame(mousemoveTimer)\n    shouldStop = false\n\n    lastClientX = e.clientX !== undefined\n        ? e.clientX\n        : e.touches[0].clientX\n\n    lastClientY = e.clientY !== undefined\n        ? e.clientY\n        : e.touches[0].clientY\n\n    update(lastClientX, lastClientY)\n}\n\nwindow.addEventListener('mousemove', mouseMoveHandler)\nwindow.addEventListener('touchmove', mouseMoveHandler)\n\nexport function mouseShift(x, y, power = 120) {\n    let distanceX = x - mouse.x\n    let distanceY = y - mouse.y\n    let distance = Math.sqrt(distanceX ** 2 + distanceY ** 2)\n    let correction = Math.E ** -(distance / power)\n\n    let shiftX = distanceX * correction\n    let shiftY = distanceY * correction\n\n    return [x + shiftX, y + shiftY]\n}\n\n// export function mouseMagnet(x, y, magnet = 120) {\n//     let distanceX = x - mouse.x\n//     let distanceY = y - mouse.y\n//     let distance = Math.sqrt(distanceX ** 2 + distanceY ** 2)\n//\n//\n//\n//     return [x + shiftX, y + shiftY]\n// }","import Point from './Point'\nimport Line from './Line'\nimport {mouse, mouseShift} from '../modules/mouse'\nimport {canvasH, canvasW, lines, params} from '../tetra'\n\nlet count = 0\n\nexport default class Tetra {\n    constructor(r, sort) {\n        count++\n        this.sort = sort\n        this.r = r\n        this.points = []\n        this.rotate(0, 0, 0)\n\n        this.forceX = 0\n        this.forceY = 0\n\n        let SQRT2 = Math.SQRT2\n\n        let p = [\n            [r, 0, -r / SQRT2],\n            [-r, 0, -r / SQRT2],\n            [0, -r, r / SQRT2],\n            [0, r, r / SQRT2],\n        ]\n\n        for (let i = 0; i < p.length; i++) {\n            this.points.push(new Point(p[i]))\n        }\n\n        let l = [\n            [0, 1],\n            [1, 2],\n            [2, 0],\n            [2, 3],\n            [3, 0],\n            [3, 1],\n        ]\n\n        for (let i = 0; i < l.length; i++) {\n            lines.push(\n                new Line(this.points[l[i][0]], this.points[l[i][1]])\n            )\n        }\n    }\n\n    rotate = (angleX, angleY, angleZ) => {\n        this.angleX = angleX\n        this.angleY = angleY\n        this.angleZ = angleZ\n\n        // pre-calculating trigo\n        this.cosY = Math.cos(angleY)\n        this.sinY = Math.sin(angleY)\n        this.cosX = Math.cos(angleX)\n        this.sinX = Math.sin(angleX)\n        this.cosZ = Math.cos(angleZ)\n        this.sinZ = Math.sin(angleZ)\n    }\n\n    projectPoint = (point) => {\n        let x = this.cosY * (this.sinZ * point.yo + this.cosZ * point.xo) - this.sinY * point.zo\n\n        let y = this.sinX * (this.cosY * point.zo + this.sinY * (this.sinZ * point.yo + this.cosZ * point.xo)) +\n            this.cosX * (this.cosZ * point.yo - this.sinZ * point.xo)\n\n        let z = this.cosX * (this.cosY * point.zo + this.sinY * (this.sinZ * point.yo + this.cosZ * point.xo)) -\n            this.sinX * (this.cosZ * point.yo - this.sinZ * point.xo)\n\n        this.x = x\n        this.y = y\n        this.z = z\n\n        let X = (canvasW * params.centerX) + x * (params.perspective / (z + params.zoom))\n        let Y = (canvasH * params.centerY) + y * (params.perspective / (z + params.zoom))\n\n        let magnet = !true\n\n        if (!magnet) {\n            let projectedPoint = mouseShift(X, Y)\n            point.X = projectedPoint[0]\n            point.Y = projectedPoint[1]\n        } else {\n            // todo rewrite from new pen\n            this.X0 = (canvasW * params.centerX) + x * (params.perspective / (z + params.zoom))\n            this.Y0 = (canvasH * params.centerY) + y * (params.perspective / (z + params.zoom))\n\n            let distanceX = x - mouse.x\n            let distanceY = y - mouse.y\n            let distance = Math.sqrt(distanceX ** 2 + distanceY ** 2)\n\n            let powerX = x - (distanceX / distance) * magnet / distance\n            let powerY = y - (distanceY / distance) * magnet / distance\n\n            this.forceX = (this.forceX + (this.X0 - X) / 2) / 2.1\n            this.forceY = (this.forceY + (this.Y0 - Y) / 2) / 2.1\n\n            this.X = powerX + this.forceX\n            this.Y = powerY + this.forceY\n        }\n    }\n\n    projection = () => this.points.forEach(point => this.projectPoint(point))\n}","import Tweakpane from 'tweakpane'\nimport {createGradControls, getActualGradient, gradParams} from './modules/gradient'\nimport presets from './presets/tetra'\nimport getPreset from '../common/utils/getPreset'\nimport Line from './geom/Line'\nimport Tetra from './geom/Tetra'\nimport {mouse} from './modules/mouse'\n\nlet paramsDefault = {\n    firstObjectSize: 100,\n    objectsCount: 12,\n    // firstCubeSize: 5,\n    // objectsCount: 10,\n    bgLight: true,\n    duplicateMethod: 'sum',\n    duplicateFactor: 0.4,\n    framesOverlay: 0,\n    perspective: 1500,\n    autorotate: true,\n    autorotateSpeed: 25,\n    // stepRotate: 1.1,\n    innerRotateSpeed: 15,\n    revertInnerRotate: false,\n    mouseRotatePower: 25,\n    mouseRotateInertia: 200,\n    mouseMagnetic: 30,\n    zoom: 1,\n    size: 1.2,\n    centerX: 0.5,\n    centerY: 0.5,\n    cursorMode: 'bloat',\n    ...gradParams,\n}\nexport let params = Object.assign({}, paramsDefault)\n\nwindow.pane = new Tweakpane({\n    container: document.querySelector('[data-pane]')\n})\nlet f1 = pane.addFolder({\n    title: 'Настройки',\n    expanded: false\n})\n\nfunction reduceArrayToObject(acc, curr) {\n    acc[curr] = curr\n    return acc\n}\n\n// TODO may be chain??\nf1.addInput(params, 'firstObjectSize', {min: 1, max: 200, step: 1})\nf1.addInput(params, 'objectsCount', {min: 1, max: 50, step: 1})\nf1.addInput(params, 'duplicateFactor', {min: 0.01, max: 3, step: 0.001})\nf1.addInput(params, 'duplicateMethod', {\n    options: ['sum', 'multiply'].reduce(reduceArrayToObject, {})\n})\nf1.addInput(params, 'cursorMode', {\n    options: ['bloat', 'repel', 'attract'].reduce(reduceArrayToObject, {})\n})\nf1.addInput(params, 'autorotate')\nf1.addInput(params, 'autorotateSpeed', {min: 0, max: 100, step: 1})\nf1.addInput(params, 'revertInnerRotate')\nf1.addInput(params, 'innerRotateSpeed', {min: 0, max: 100, step: 1})\nf1.addInput(params, 'mouseRotatePower', {min: 1, max: 100, step: 1})\nf1.addInput(params, 'mouseRotateInertia', {min: 1, max: 1000, step: 1})\nf1.addInput(params, 'mouseMagnetic', {min: 1, max: 100, step: 1})\nf1.addInput(params, 'centerX', {min: 0, max: 1, step: 0.01})\nf1.addInput(params, 'centerY', {min: 0, max: 1, step: 0.01})\nf1.addInput(params, 'perspective', {min: 0, max: 3000, step: 1})\n// f1.addInput(params, 'zoom', {min: 0, max: 1000, step: 1})\nf1.addInput(params, 'size', {min: 0.1, max: 4, step: 0.1})\nf1.addInput(params, 'framesOverlay', {min: 0, max: 1, step: 0.01})\nf1.addSeparator()\ncreateGradControls(f1, params)\n\nf1.addInput({preset: 0}, 'preset', {\n    options: presets.reduce((acc, val, i) => {\n        acc['preset ' + (i + 1)] = i\n        return acc\n    }, {})\n})\n\nif (presets.length) {\n    Object.assign(params, paramsDefault, presets[0])\n    pane.refresh()\n}\n\nlet saveBtn = f1.addButton({title: 'Copy preset'})\nsaveBtn.on('click', () => navigator.clipboard.writeText(getPreset(pane.exportPreset())))\n\ndocument.querySelector('.box').addEventListener('click', () => f1.expanded = false)\n\nlet box\nlet canvas\nlet ctx\nlet objects\nexport let lines\nexport let canvasW\nexport let canvasH\nlet cx = 50\nlet cy = 50\nlet cz = 0\nlet minZ\nlet angleY = 0\nlet angleX = 0\nlet angleZ = 0\n\n// to except drawing same edge twice\nlet drawnLines = []\n// fov\n// let perspective = 1000\n// let zoom = 1000\n\nlet gradient\n\nlet resize = function() {\n    // screen resize\n    canvasW = box.offsetWidth\n    canvasH = box.offsetHeight\n\n    canvas.width = canvasW\n    canvas.height = canvasH\n}\n\nfunction reset() {\n    objects = []\n    lines = []\n\n    let size = params.firstObjectSize\n\n    for (let i = 0; i < params.objectsCount; i++) {\n        objects.push(new Tetra(size, i))\n\n        if (params.duplicateMethod === 'sum') {\n            size += params.duplicateFactor * params.firstObjectSize\n        } else if (params.duplicateMethod === 'multiply') {\n            size *= params.duplicateFactor\n        }\n    }\n}\n\nlet init = function() {\n    box = document.querySelector('.box')\n    canvas = document.querySelector('[data-canvas]')\n    ctx = canvas.getContext('2d')\n\n    window.addEventListener('mousewheel', e => {\n        cz += e.wheelDelta\n    })\n\n    resize()\n    window.addEventListener('resize', resize, false)\n\n    reset()\n    updateGradient()\n    render()\n    updatePerspective()\n}\n\n// main loop\nfunction render() {\n    Line.eraseAll()\n\n    ctx.save()\n\n    if (params.gradPreview) {\n        ctx.fillStyle = gradient\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n    } else {\n        ctx.fillStyle = `rgba(255, 255, 255, ${1 - params.framesOverlay})`\n        ctx.fillRect(0, 0, canvasW, canvasH)\n\n        cx = mouse.x * params.mouseRotatePower / 100\n        cy = -mouse.y * params.mouseRotatePower / 100\n\n        // ctx.globalCompositeOperation = 'destination-out'\n        ctx.strokeStyle = gradient\n\n        // points projection\n        minZ = 0\n        let i = 0\n        let obj\n\n        while (obj = objects[i++]) {\n            // easing rotations\n            angleX += ((cy - angleX) / params.mouseRotateInertia)\n            angleY += ((cx - angleY) / params.mouseRotateInertia)\n            angleZ += ((cz - angleZ) / params.mouseRotateInertia)\n\n            let rotateFactor = (params.revertInnerRotate)\n                ? (params.objectsCount - i + 1)\n                : i + 1\n            rotateFactor *= params.innerRotateSpeed / 100000\n\n            obj.rotate(angleX * rotateFactor, angleY * rotateFactor, angleZ * rotateFactor)\n            obj.projection()\n        }\n\n        if (params.autorotate) cz += params.autorotateSpeed / 10\n\n        let j = 0\n        let line\n        while (line = lines[j++]) {\n            line.draw(ctx)\n        }\n    }\n\n    ctx.restore()\n\n    requestAnimationFrame(render)\n}\n\nlet updateGradient = () => gradient = getActualGradient(canvas, params)\n\nlet updatePerspective = () => params.zoom = params.perspective * params.size\n\nwindow.pane.on('change', (e) => {\n    updatePerspective()\n    reset()\n    updateGradient()\n    // pane.refresh()\n})\n\ninit()\n\nwindow.params = params"],"names":["a","globalThis","self","window","global","__esModule","default","firstObjectSize","objectsCount","duplicateFactor","duplicateMethod","autorotate","autorotateSpeed","revertInnerRotate","innerRotateSpeed","mouseRotatePower","mouseRotateInertia","mouseMagnetic","centerX","centerY","perspective","size","framesOverlay","gradCenter","x","y","gradRadius","gradMiddlePoint","gradColor1","r","g","b","gradColor2","gradColor3","gradPreview","preset","$15fdcf2ff8f3010756b2326e16b3e1b3$var$drawnLines","$15fdcf2ff8f3010756b2326e16b3e1b3$export$default","constructor","point0","point1","draw","ctx","this","sum","X","Y","indexOf","push","globalAlpha","beginPath","moveTo","lineTo","closePath","stroke","$8eef2368bd0fc08d424768e92b157ed9$export$default","xyz","parent","xo","yo","zo","$6aebca4c1d33a78bb99e01ae4c11fef0$var$mousemoveTimer","$6aebca4c1d33a78bb99e01ae4c11fef0$var$lastClientX","$6aebca4c1d33a78bb99e01ae4c11fef0$var$lastClientY","$6aebca4c1d33a78bb99e01ae4c11fef0$var$ww","innerWidth","$6aebca4c1d33a78bb99e01ae4c11fef0$var$wh","innerHeight","$6aebca4c1d33a78bb99e01ae4c11fef0$var$clientX","$6aebca4c1d33a78bb99e01ae4c11fef0$var$clientY","$6aebca4c1d33a78bb99e01ae4c11fef0$export$mouse","inertia","cursorMode","addEventListener","$6aebca4c1d33a78bb99e01ae4c11fef0$var$shouldStop","$6aebca4c1d33a78bb99e01ae4c11fef0$var$update","targetX","targetY","$6aebca4c1d33a78bb99e01ae4c11fef0$var$inertiaTo","requestAnimationFrame","current","target","distToGo","newPos","Math","abs","cancelAnimationFrame","$6aebca4c1d33a78bb99e01ae4c11fef0$var$mouseMoveHandler","e","preventDefault","undefined","clientX","touches","clientY","$fb1fa4d991719bbfcd362ed6725e1f27$export$default","sort","rotate","angleX","angleY","angleZ","cosY","cos","sinY","sin","cosX","sinX","cosZ","sinZ","projectPoint","point","z","zoom","magnet","projectedPoint","power","distanceX","distanceY","distance","sqrt","correction","E","projection","points","forEach","forceX","forceY","SQRT2","p","i","length","l","$767241451ed9a31a39a90ef2837cf386$var$paramsDefault","bgLight","params","Object","assign","pane","container","document","querySelector","$767241451ed9a31a39a90ef2837cf386$var$box","$767241451ed9a31a39a90ef2837cf386$var$canvas","$767241451ed9a31a39a90ef2837cf386$var$ctx","$767241451ed9a31a39a90ef2837cf386$var$objects","lines","canvasW","canvasH","$767241451ed9a31a39a90ef2837cf386$var$f1","addFolder","title","expanded","$767241451ed9a31a39a90ef2837cf386$var$reduceArrayToObject","acc","curr","addInput","min","max","step","options","reduce","addSeparator","val","refresh","addButton","on","navigator","clipboard","writeText","exportPreset","$767241451ed9a31a39a90ef2837cf386$var$minZ","$767241451ed9a31a39a90ef2837cf386$var$gradient","$767241451ed9a31a39a90ef2837cf386$var$cx","$767241451ed9a31a39a90ef2837cf386$var$cy","$767241451ed9a31a39a90ef2837cf386$var$cz","$767241451ed9a31a39a90ef2837cf386$var$angleY","$767241451ed9a31a39a90ef2837cf386$var$angleX","$767241451ed9a31a39a90ef2837cf386$var$angleZ","$767241451ed9a31a39a90ef2837cf386$var$resize","offsetWidth","offsetHeight","width","height","$767241451ed9a31a39a90ef2837cf386$var$reset","$767241451ed9a31a39a90ef2837cf386$var$render","eraseAll","save","fillStyle","fillRect","strokeStyle","obj","rotateFactor","line","j","restore","$767241451ed9a31a39a90ef2837cf386$var$updateGradient","$767241451ed9a31a39a90ef2837cf386$var$updatePerspective","getContext","wheelDelta"],"version":3,"file":"tetra.e94af219.js.map"}