{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./3d-cubes/presets/index.js","./3d-cubes/index.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","export default [\n    {\"firstCubeSize\":55,\"cubesCount\":15,\"duplicateFactor\":0.4,\"duplicateMethod\":\"sum\",\"backfaceVisible\":true,\"autorotate\":true,\"autorotateSpeed\":5,\"revertInnerRotate\":false,\"innerRotateSpeed\":10,\"mouseRotatePower\":28,\"mouseRotateInertia\":1000,\"centerX\":0.7,\"centerY\":0.35,\"perspective\":1000,\"size\":1.2,\"framesOverlay\":0,\"gradCenter\":{\"x\":0.47,\"y\":-0.44},\"gradRadius\":0.74,\"gradMiddlePoint\":0.49,\"gradColor1\":{\"r\":127.5,\"g\":159.375,\"b\":255},\"gradColor2\":{\"r\":102,\"g\":208.7745,\"b\":255},\"gradColor3\":{\"r\":204.3446,\"g\":255,\"b\":178.5},\"gradPreview\":false,\"preset\":0},\n    // {\"firstCubeSize\":50,\"cubesCount\":15,\"duplicateFactor\":0.4,\"duplicateMethod\":\"sum\",\"backfaceVisible\":true,\"autorotate\":true,\"autorotateSpeed\":10,\"revertInnerRotate\":false,\"innerRotateSpeed\":15,\"mouseRotateInertia\":1000,\"perspective\":1000,\"size\":1.2,\"framesOverlay\":0,\"gradCenter\":{\"x\":0.37,\"y\":0.37},\"gradRadius\":0.7,\"gradMiddlePoint\":0.71,\"gradColor1\":{\"r\":186,\"g\":0,\"b\":250},\"gradColor2\":{\"r\":0,\"g\":164,\"b\":235},\"gradColor3\":{\"r\":152,\"g\":255,\"b\":71},\"gradPreview\":false,\"preset\":0},\n    // {\"firstCubeSize\":50,\"cubesCount\":12,\"duplicateFactor\":0.4,\"duplicateMethod\":\"sum\",\"backfaceVisible\":false,\"autorotate\":true,\"autorotateSpeed\":25,\"revertInnerRotate\":false,\"innerRotateSpeed\":15,\"mouseRotateInertia\":200,\"perspective\":1500,\"size\":1.2,\"framesOverlay\":0,\"gradCenter\":{\"x\":0.37,\"y\":0.37},\"gradRadius\":0.8,\"gradMiddlePoint\":0.5,\"gradColor1\":{\"r\":186,\"g\":0,\"b\":250},\"gradColor2\":{\"r\":20,\"g\":110,\"b\":250},\"gradColor3\":{\"r\":0,\"g\":251,\"b\":235},\"gradPreview\":false,\"preset\":0}\n]","import Tweakpane from 'tweakpane'\nimport {createGradControls, getActualGradient, gradParams} from './modules/gradient'\nimport presets from './presets/index'\nimport getPreset from '../common/utils/getPreset'\n\nlet paramsDefault = {\n    firstCubeSize: 50,\n    cubesCount: 1,\n    // firstCubeSize: 5,\n    // cubesCount: 10,\n    backfaceVisible: false,\n    bgLight: true,\n    duplicateMethod: 'sum',\n    duplicateFactor: 0.4,\n    framesOverlay: 0,\n    perspective: 1500,\n    autorotate: true,\n    autorotateSpeed: 25,\n    // stepRotate: 1.1,\n    innerRotateSpeed: 15,\n    revertInnerRotate: false,\n    mouseRotatePower: 25,\n    mouseRotateInertia: 200,\n    zoom: 1,\n    size: 1.2,\n    centerX: 0.5,\n    centerY: 0.5,\n    ...gradParams\n}\nlet params = Object.assign({}, paramsDefault)\n\nwindow.pane = new Tweakpane({\n    container: document.querySelector('[data-pane]')\n})\nlet f1 = pane.addFolder({\n    title: 'Настройки',\n    expanded: false\n})\n\nfunction reduceArrayToObject(acc, curr) {\n    acc[curr] = curr\n    return acc\n}\n\nf1.addInput(params, 'firstCubeSize', {min: 1, max: 100, step: 1})\nf1.addInput(params, 'cubesCount', {min: 1, max: 50, step: 1})\nf1.addInput(params, 'duplicateFactor', {min: 0.01, max: 3, step: 0.001})\nf1.addInput(params, 'duplicateMethod', {\n    options: ['sum', 'multiply'].reduce(reduceArrayToObject, {})\n})\nf1.addInput(params, 'backfaceVisible')\nf1.addInput(params, 'autorotate')\nf1.addInput(params, 'autorotateSpeed', {min: 0, max: 100, step: 1})\nf1.addInput(params, 'revertInnerRotate')\nf1.addInput(params, 'innerRotateSpeed', {min: 0, max: 100, step: 1})\nf1.addInput(params, 'mouseRotatePower', {min: 1, max: 100, step: 1})\nf1.addInput(params, 'mouseRotateInertia', {min: 1, max: 1000, step: 1})\nf1.addInput(params, 'centerX', {min: 0, max: 1, step: 0.01})\nf1.addInput(params, 'centerY', {min: 0, max: 1, step: 0.01})\nf1.addInput(params, 'perspective', {min: 0, max: 3000, step: 1})\n// f1.addInput(params, 'zoom', {min: 0, max: 1000, step: 1})\nf1.addInput(params, 'size', {min: 0.1, max: 4, step: 0.1})\nf1.addInput(params, 'framesOverlay', {min: 0, max: 1, step: 0.01})\nf1.addSeparator()\ncreateGradControls(f1, params)\n\nf1.addInput({preset: 0}, 'preset', {\n    options: presets.reduce((acc, val, i) => {\n        acc['preset ' + (i + 1)] = i\n        return acc\n    }, {})\n})\n\nif (presets.length) {\n    Object.assign(params, paramsDefault, presets[0])\n    pane.refresh()\n}\n\nlet saveBtn = f1.addButton({title: 'Copy preset'})\nsaveBtn.on('click', () => navigator.clipboard.writeText(getPreset(pane.exportPreset())))\n\ndocument.querySelector('.box').addEventListener('click', () => f1.expanded = false)\n\nlet box\nlet canvas\nlet ctx\nlet cubes\nlet faces\nlet nx\nlet ny\nlet canvasW\nlet canvasH\nlet xm = 0\nlet ym = 0\nlet cx = 50\nlet cy = 50\nlet cz = 0\nlet cxb = 0\nlet cyb = 0\nlet white\nlet alpha\nlet fps = 0\nlet drag = true\nlet moved\nlet startX = 0\nlet startY = 0\nlet cosY\nlet sinY\nlet cosX\nlet sinX\nlet cosZ\nlet sinZ\nlet minZ\nlet angleY = 0\nlet angleX = 0\nlet angleZ = 0\nlet destroy = false\nlet running = true\n\n// to except drawing same edge twice\nlet drawnLines = []\n// fov\n// let perspective = 1000\n// let zoom = 1000\n\nlet gradient\n\nfunction Point(parent, xyz, project) {\n    this.project = project\n    this.xo = xyz[0]\n    this.yo = xyz[1]\n    this.zo = xyz[2]\n    this.cube = parent\n}\n\nPoint.prototype.projection = function() {\n    // 3D rotation\n    let x = cosY * (sinZ * this.yo + cosZ * this.xo) - sinY * this.zo\n    let y = sinX * (cosY * this.zo + sinY * (sinZ * this.yo + cosZ * this.xo)) + cosX * (cosZ * this.yo - sinZ * this.xo)\n    let z = cosX * (cosY * this.zo + sinY * (sinZ * this.yo + cosZ * this.xo)) - sinX * (cosZ * this.yo - sinZ * this.xo)\n    this.x = x\n    this.y = y\n    this.z = z\n    if (this.project) {\n        // point visible\n        if (z < minZ) minZ = z\n        this.visible = (params.zoom + z > 0)\n\n        // 3D to 2D projection\n        this.X = (canvasW * params.centerX) + x * (params.perspective / (z + params.zoom))\n        this.Y = (canvasH * params.centerY) + y * (params.perspective / (z + params.zoom))\n    }\n}\n\n// ======= polygon constructor ========\nlet Face = function(cube, index, normalVector) {\n    // parent cube\n    this.cube = cube\n\n    // coordinates\n    this.p0 = cube.points[index[0]]\n    this.p1 = cube.points[index[1]]\n    this.p2 = cube.points[index[2]]\n    this.p3 = cube.points[index[3]]\n\n    // normal vector\n    this.normal = new Point(this, normalVector, false)\n}\n\nFace.prototype = {\n    faceVisible: function() {\n        // points visible\n        if (this.p0.visible && this.p1.visible && this.p2.visible && this.p3.visible) {\n            if (params.backfaceVisible) {\n                this.visible = true\n                return true\n            }\n\n            // back face culling\n            if ((this.p1.Y - this.p0.Y) / (this.p1.X - this.p0.X) < (this.p2.Y - this.p0.Y) / (this.p2.X - this.p0.X) ^ this.p0.X < this.p1.X == this.p0.X > this.p2.X) {\n                // face visible\n                this.visible = true\n                return true\n            }\n        }\n\n        // face hidden\n        this.visible = false\n        this.distance = -99999\n        return false\n    },\n\n    distanceToCamera: function() {\n        // distance to camera\n        let dx = (this.p0.x + this.p1.x + this.p2.x + this.p3.x) * 0.25\n        let dy = (this.p0.y + this.p1.y + this.p2.y + this.p3.y) * 0.25\n        let dz = (params.zoom + params.perspective) + (this.p0.z + this.p1.z + this.p2.z + this.p3.z) * 0.25\n        this.distance = Math.sqrt(dx * dx + dy * dy + dz * dz)\n    },\n\n    draw: function() {\n        let r\n        let g\n        let b\n\n        let drawSingleLine = (line) => {\n            let lineSum = line.reduce((acc, val) => acc + val)\n\n            if (drawnLines.indexOf(lineSum) === -1) {\n                drawnLines.push(lineSum)\n            } else {\n                ctx.globalAlpha = 0\n                //console.log('skip line')\n                //ctx.moveTo(line[2], line[3])\n            }\n            ctx.lineTo(line[2], line[3])\n            ctx.globalAlpha = 1\n        }\n\n        // shape face\n        ctx.beginPath()\n\n        ctx.moveTo(this.p0.X, this.p0.Y)\n\n        let line = [this.p0.X, this.p0.Y, this.p1.X, this.p1.Y]\n        drawSingleLine(line)\n\n        line = [line[2], line[3], this.p2.X, this.p2.Y]\n        drawSingleLine(line)\n\n        line = [line[2], line[3], this.p3.X, this.p3.Y]\n        drawSingleLine(line)\n\n        line = [line[2], line[3], this.p0.X, this.p0.Y]\n        drawSingleLine(line)\n\n        ctx.closePath()\n\n        // flat (lambert) shading\n        this.normal.projection()\n        let light = (\n            white ?\n                this.normal.y + this.normal.z * 0.5 :\n                this.normal.z\n        ) * 256\n        r = g = b = light\n\n        // fill\n        // ctx.fillStyle = 'rgba(' +\n        //     Math.round(r) + ',' +\n        //     Math.round(g) + ',' +\n        //     Math.round(b) + ',' + this.cube.alpha + ')'\n        // ctx.fill()\n        ctx.strokeStyle = gradient\n        ctx.stroke()\n    }\n}\n\n// ======== Cube constructor ========\nlet Cube = function(nx, ny, nz, x, y, z, w) {\n    this.w = w\n    this.points = []\n    let p = [\n        [x - w, y - w, z - w],\n        [x + w, y - w, z - w],\n        [x + w, y + w, z - w],\n        [x - w, y + w, z - w],\n        [x - w, y - w, z + w],\n        [x + w, y - w, z + w],\n        [x + w, y + w, z + w],\n        [x - w, y + w, z + w]\n    ]\n    for (let i in p) this.points.push(\n        new Point(this, p[i], true)\n    )\n\n    // faces coordinates\n    let f = [\n        [0, 1, 2, 3],\n        [0, 4, 5, 1],\n        [3, 2, 6, 7],\n        [0, 3, 7, 4],\n        [1, 5, 6, 2],\n        [5, 4, 7, 6]\n    ]\n\n    // faces normals\n    let nv = [\n        [0, 0, 1],\n        [0, 1, 0],\n        [0, -1, 0],\n        [1, 0, 0],\n        [-1, 0, 0],\n        [0, 0, -1]\n    ]\n\n    // cube transparency\n    this.alpha = alpha ? 0.5 : 1\n    // push faces\n    for (let i in f) {\n        faces.push(\n            new Face(this, f[i], nv[i])\n        )\n    }\n}\n\n\nlet resize = function() {\n    // screen resize\n    canvasW = box.offsetWidth\n    canvasH = box.offsetHeight\n    let o = box\n    for (nx = 0, ny = 0; o != null; o = o.offsetParent) {\n        nx += o.offsetLeft\n        ny += o.offsetTop\n    }\n    canvas.width = canvasW\n    canvas.height = canvasH\n}\n\nfunction reset() {\n    cubes = []\n    faces = []\n\n    let size = params.firstCubeSize\n\n    for (let i = 0; i < params.cubesCount; i++) {\n        cubes.push(new Cube(0, 0, 0, 0, 0, 0, size))\n\n        if (params.duplicateMethod === 'sum') {\n            size += params.duplicateFactor * params.firstCubeSize\n        } else if (params.duplicateMethod === 'multiply') {\n            size *= params.duplicateFactor\n        }\n    }\n}\n\nlet init = function() {\n    box = document.querySelector('.box')\n    canvas = document.querySelector('[data-canvas]')\n    ctx = canvas.getContext('2d')\n\n    // unified touch/mouse events handler\n    box.ontouchstart = box.onmousedown = function(e) {\n        if (!running) return true\n        // touchstart\n        if (e.target !== canvas) return\n        e.preventDefault() // prevents scrolling\n        if (box.setCapture) box.setCapture()\n        moved = false\n        //drag = true\n        startX = (e.clientX !== undefined ? e.clientX : e.touches[0].clientX) - nx\n        startY = (e.clientY !== undefined ? e.clientY : e.touches[0].clientY) - ny\n    }\n\n    box.ontouchmove = box.onmousemove = function(e) {\n        if (!running) return true\n\n        // touchmove\n        e.preventDefault()\n        xm = (e.clientX !== undefined ? e.clientX : e.touches[0].clientX) - nx\n        ym = (e.clientY !== undefined ? e.clientY : e.touches[0].clientY) - ny\n\n        // detectFaceOver()\n        if (drag) {\n            cx = cxb + (xm - startX) * params.mouseRotatePower / 100\n            cy = cyb - (ym - startY) * params.mouseRotatePower / 100\n            //console.log(cx)\n        }\n\n        if (Math.abs(xm - startX) > 10 || Math.abs(ym - startY) > 10) {\n            // if pointer moves then cancel the tap/click\n            moved = true\n        }\n    }\n\n    // Z axis rotation (mouse wheel)\n    // scr.addEventListener('DOMMouseScroll', function(e) {\n    //     if (!running) return true\n    //     cz += e.detail * 12\n    //     return false\n    // }, false)\n\n    box.onmousewheel = function(e) {\n        if (!running) return true\n        cz += e.wheelDelta / 3\n        return false\n    }\n\n    resize()\n    window.addEventListener('resize', resize, false)\n\n    reset()\n    updateGradient()\n    roundParams()\n    run()\n    updatePerspective()\n}\n\n// main loop\nlet run = function() {\n    drawnLines = []\n    ctx.save()\n\n\n    if (params.gradPreview) {\n        ctx.fillStyle = gradient\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n    } else {\n        // screen background\n        let bg = (params.bgLight) ? '255,255,255' : '0,0,0'\n\n        ctx.fillStyle = `rgba(${bg}, ${1 - params.framesOverlay})`\n        ctx.fillRect(0, 0, canvasW, canvasH)\n\n        // ctx.globalCompositeOperation = 'destination-out'\n        // ctx.globalCompositeOperation = 'xor'\n\n        // points projection\n        minZ = 0\n        let i = 0\n        let c\n\n        while (c = cubes[i++]) {\n            // easing rotations\n            angleX += ((cy - angleX) / params.mouseRotateInertia)\n            angleY += ((cx - angleY) / params.mouseRotateInertia)\n            angleZ += ((cz - angleZ) / params.mouseRotateInertia)\n\n            let rotateFactor = (params.revertInnerRotate)\n                ? (params.cubesCount - i + 1)\n                : i\n\n            let innerRotateSpeed = params.innerRotateSpeed / 100000\n\n            // pre-calculating trigo\n            cosY = Math.cos(angleY * innerRotateSpeed * rotateFactor)\n            sinY = Math.sin(angleY * innerRotateSpeed * rotateFactor)\n            cosX = Math.cos(angleX * innerRotateSpeed * rotateFactor)\n            sinX = Math.sin(angleX * innerRotateSpeed * rotateFactor)\n            cosZ = Math.cos(angleZ * innerRotateSpeed * rotateFactor)\n            sinZ = Math.sin(angleZ * innerRotateSpeed * rotateFactor)\n\n            let j = 0, p\n            while (p = c.points[j++]) {\n                p.projection()\n            }\n        }\n\n        // if (params.autorotate) cz += 1\n        if (params.autorotate) cz += params.autorotateSpeed / 10\n\n        // adapt params.zoom\n        // let d = -minZ + 100 - params.zoom\n        // params.zoom += (d * ((d > 0) ? 0.05 : 0.01))\n\n        // faces light\n        let j = 0, f\n        while (f = faces[j++]) {\n            if (f.faceVisible()) {\n                f.distanceToCamera()\n            }\n        }\n        // faces depth sorting\n        faces.sort(function(p0, p1) {\n            return p1.distance - p0.distance\n        })\n\n        // painting faces\n        j = 0\n        while (f = faces[j++]) {\n            if (f.visible) {\n                f.draw()\n            } else break\n        }\n    }\n\n    ctx.restore()\n    // console.log(drawnLines)\n    fps++\n    if (running) requestAnimationFrame(run)\n}\n\nlet updateGradient = () => gradient = getActualGradient(canvas, params)\n\nlet updatePerspective = () => params.zoom = params.perspective * params.size\n// let updatePerspective = () => params.perspective = params.zoom  * params.size\n\nlet roundParams = () => {\n    for (let [key, value] of Object.entries(params)) {\n        if (!isNaN(parseFloat(value)) && isFinite(value)) {\n            params[key] = (Number.isInteger(value))\n                ? parseInt(value)\n                : parseFloat(value.toFixed(3))\n        }\n    }\n}\n\n\nwindow.pane.on('change', (e) => {\n    // pane.on('change', (ev) => {\n    //     if (ev.presetKey === \"gradPreview\" && ev.value) {\n    //         resize()\n    //     }\n    // })\n    updatePerspective()\n    roundParams()\n    reset()\n    updateGradient()\n    // pane.refresh()\n})\n\ninit()\n\nwindow.params = params"],"names":["a","globalThis","self","window","global","__esModule","default","firstCubeSize","cubesCount","duplicateFactor","duplicateMethod","backfaceVisible","autorotate","autorotateSpeed","revertInnerRotate","innerRotateSpeed","mouseRotatePower","mouseRotateInertia","centerX","centerY","perspective","size","framesOverlay","gradCenter","x","y","gradRadius","gradMiddlePoint","gradColor1","r","g","b","gradColor2","gradColor3","gradPreview","preset","$5cedaac1561b3e8783f9944ff318c518$var$paramsDefault","bgLight","zoom","$5cedaac1561b3e8783f9944ff318c518$var$params","Object","assign","pane","container","document","querySelector","$5cedaac1561b3e8783f9944ff318c518$var$box","$5cedaac1561b3e8783f9944ff318c518$var$canvas","$5cedaac1561b3e8783f9944ff318c518$var$ctx","$5cedaac1561b3e8783f9944ff318c518$var$cubes","$5cedaac1561b3e8783f9944ff318c518$var$faces","$5cedaac1561b3e8783f9944ff318c518$var$nx","$5cedaac1561b3e8783f9944ff318c518$var$ny","$5cedaac1561b3e8783f9944ff318c518$var$canvasW","$5cedaac1561b3e8783f9944ff318c518$var$canvasH","$5cedaac1561b3e8783f9944ff318c518$var$f1","addFolder","title","expanded","addInput","min","max","step","options","reduce","acc","curr","$5cedaac1561b3e8783f9944ff318c518$var$reduceArrayToObject","addSeparator","val","i","length","refresh","addButton","on","navigator","clipboard","writeText","exportPreset","addEventListener","$5cedaac1561b3e8783f9944ff318c518$var$moved","$5cedaac1561b3e8783f9944ff318c518$var$cosY","$5cedaac1561b3e8783f9944ff318c518$var$sinY","$5cedaac1561b3e8783f9944ff318c518$var$cosX","$5cedaac1561b3e8783f9944ff318c518$var$sinX","$5cedaac1561b3e8783f9944ff318c518$var$cosZ","$5cedaac1561b3e8783f9944ff318c518$var$sinZ","$5cedaac1561b3e8783f9944ff318c518$var$minZ","$5cedaac1561b3e8783f9944ff318c518$var$gradient","$5cedaac1561b3e8783f9944ff318c518$var$xm","$5cedaac1561b3e8783f9944ff318c518$var$ym","$5cedaac1561b3e8783f9944ff318c518$var$cx","$5cedaac1561b3e8783f9944ff318c518$var$cy","$5cedaac1561b3e8783f9944ff318c518$var$cz","$5cedaac1561b3e8783f9944ff318c518$var$startX","$5cedaac1561b3e8783f9944ff318c518$var$startY","$5cedaac1561b3e8783f9944ff318c518$var$angleY","$5cedaac1561b3e8783f9944ff318c518$var$angleX","$5cedaac1561b3e8783f9944ff318c518$var$angleZ","$5cedaac1561b3e8783f9944ff318c518$var$drawnLines","$5cedaac1561b3e8783f9944ff318c518$var$Point","parent","xyz","project","this","xo","yo","zo","cube","prototype","projection","z","visible","X","Y","$5cedaac1561b3e8783f9944ff318c518$var$Face","index","normalVector","p0","points","p1","p2","p3","normal","faceVisible","distance","distanceToCamera","dx","dy","dz","Math","sqrt","draw","drawSingleLine","line","lineSum","indexOf","push","globalAlpha","lineTo","beginPath","moveTo","closePath","strokeStyle","stroke","$5cedaac1561b3e8783f9944ff318c518$var$Cube","nx","ny","nz","w","p","f","nv","alpha","$5cedaac1561b3e8783f9944ff318c518$var$resize","offsetWidth","offsetHeight","o","offsetParent","offsetLeft","offsetTop","width","height","$5cedaac1561b3e8783f9944ff318c518$var$reset","$5cedaac1561b3e8783f9944ff318c518$var$run","save","fillStyle","fillRect","bg","c","rotateFactor","cos","sin","j","sort","restore","requestAnimationFrame","$5cedaac1561b3e8783f9944ff318c518$var$updateGradient","$5cedaac1561b3e8783f9944ff318c518$var$updatePerspective","$5cedaac1561b3e8783f9944ff318c518$var$roundParams","key","value","entries","isNaN","parseFloat","isFinite","Number","isInteger","parseInt","toFixed","e","getContext","ontouchstart","onmousedown","target","preventDefault","setCapture","undefined","clientX","touches","clientY","ontouchmove","onmousemove","abs","onmousewheel","wheelDelta","params"],"version":3,"file":"index.4ca90124.js.map"}