{"version":3,"sources":["modules/npos3d.js"],"names":["NPos3d","addFunc","o","t","len","i","parent","remove","undefined","children","length","childrenToBeAdded","push","removeFunc","onRemove","expired","destroyFunc","updateMatricesFunc","viewMatrix","m","Maths","p","mat4P3Scale","__mat4Identity","scale","matrices","localScale","eulerToMat4","rot","rotOrder","localRotation","mat4Set","localComposite","mat4Mul","mat4P3Translate","pos","isScene","globalComposite","p3Mat4Mul","gPos","gScale","recursivelyUpdateMatrices","rUM","updateMatrices","transformPoints","outPoints","shape","points","getTransformedPointsFunc","transformedPoints","getWorldPositionFunc","renderFunc","scene","updateTransformedPointCache","transformedPointCache","renderStyle","lines","drawLines","drawPoints","postRender","pi","Math","PI","tau","deg","sin","cos","square","num","pointInNBounds","point","bounds","d","pointIn2dBounds","pointIn3dBounds","getSquareVecLength2D","x","y","getVecLength2D","sqrt","getRelativeAngle3D","p3","topAngle","atan2","p3Add","a","b","outputPoint","p3Sub","pointAt","endPos","posDiff","makeMat4","slice","mat3ToMat4Translation","rotOrders","euler","order","outputMatrix","ti","tj","th","ci","cj","ch","si","sj","sh","cc","cs","sc","ss","M","eulerString","toString","orderString","R","j","k","parity","a00","a01","a02","a03","a04","a05","a06","a07","a08","a09","a10","a11","a12","a13","a14","a15","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","b12","b13","b14","b15","v","aX","aY","aZ","z","color","__matrix","p3Rotate","getP3Scaled","getP2Offset","p2","offset","getP3String","nGetBounds","pointList","min","max","makeBBCubeFromTwoPoints","bbMinOffset","bbMaxOffset","Utils","subset","ob","string","output","propList","split","initVal","arguments","get_type","input","Object","prototype","call","displayDebug","u","keyName","match","constructor","name","hasOwnProperty","display","document","createElement","style","position","top","left","fontFamily","fontSize","lineHeight","whiteSpace","round","random","body","appendChild","innerHTML","join","clearDebug","parentNode","removeChild","Scene","args","type","debugViewport","mpos","pixelScale","globalCompositeOperation","backgroundColor","strokeStyle","fillStyle","lineWidth","fullScreen","forceRealPixels","oldAndroid","test","navigator","userAgent","mobileSafari","isMobile","isChrome","newChromeMobile","parseInt","mobileFireFox","useOuterWidth","canvasId","existingCanvas","canvas","canvasStyleColor","id","c","getContext","zIndex","window","orientation","outerWidth","checkWindow","scaleMultiplier","devicePixelRatio","actualWidth","screen","width","height","w","ceil","h","innerHeight","outerHeight","innerWidth","imageRendering","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","resize","camera","Camera","cursorPosition","mouseHandler","e","canvasOffsetX","canvasOffsetY","pointX","pointY","target","preventDefault","getBoundingClientRect","touches","clientX","clientY","cx","cy","addEventListener","renderInstructionList","add","start","globalize","floor","lw","lh","handleViewportShenanigans","viewportContentString","meta","getElementById","setAttribute","head","getViewportForceRealPixelsString","getCommonViewportWidth","commonViewportProperties","result","ratio","repairedRatioString","updateRecursively","update","forEach","renderRecursively","render","removeExpiredChildrenRecursively","rECR","child","splice","addNewChildrenRecursively","newChild","onAdd","instruction","method","newSize","screenSizeWidth","screenSizeHeight","documentElementClientWidth","documentElement","clientWidth","documentElementClientHeight","clientHeight","inverseMatrix","clearRect","fillRect","save","translate","sort","sortRenderInstructionByZDepth","restore","stop","console","log","stack","loop","timer","requestAnimationFrame","cancelAnimationFrame","recurseForInheritedProperties","rfip","propName","drawLine","beginPath","moveTo","lineTo","lineCap","stroke","drawCircle","pointScale","arc","pointStyle","fill","resultMatrix","rotationMatrix","map","n","reverse","currentGlobalCompositeMatrixString","lastGlobalCompositeMatrixString","boundingBox","lineRenderLoop","p3a","p3b","clipNear","clipFar","p0","project3Dto2D","p1","screenBounds","p0InBounds","p1InBounds","bbCube","bbOffScreen","bbp","renderAlways","pointRenderLoop","circleArgs","blessWith3DBase","frustumMultiplier","canvasDim","Geom","cube","axies","destroy","getTransformedPoints","getWorldPosition","Ob3D","font","Layout","ResponsivePoint","drawSprite","point2D","depthScale","spriteScale","rotate","spriteRot","numFrames","frameState","drawImage","image","renderSprite","loaded","renderSpriteFunc","blessWithSpriteBase","config","path","Image","onload","src","Sprite3D","Color","detectCSSColorType","indexOf","toLowerCase","hexToDec","convertHexToRGBArray","r","g","chars","parenColorToArray","replace","parseFloat","rgbArrayToHLSArray","inp","rgbToHsl","hslArrayToRGBArray","hslToRgb","colorStringToHSLAArray","nums","colorStringToHSLAString","colorStringToRGBAArray","colorStringToRGBAString","s","l","hue2rgb","q","Fx","Tween","object","properties","onUpdate","callback","transitionLinear","frames","frac","initialValues","that","prop","init","Explosion","line","ExplosionLine","colorArray","subVel","midpoint","getMidpoint","addVel","vel","rint","rotVel","rneg","lifespan","life","rpos","rintpos","ca","Circle","segments","radius","formCircle","angle","Sphere","rad","rings","sliceWidth","pointNum","ring","amp","Lathe","axis","generate","segment","pointIndex","lineIndex","segmentAngle","segmentEuler","segmentMatrix","lineNum","Twist","factor","axisProgression","twistEuler","twistMatrix"],"mappings":"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","file":"npos3d.1616bdf1.js","sourceRoot":"..\\..\\npos3d","sourcesContent":["var NPos3d = NPos3d || {\n    addFunc: function(o) {\n        var t = this, len, i\n        if (o.parent) { //If the object already has a parent, remove it from that one first.\n            o.parent.remove(o)\n        }\n        if (t.children === undefined) {\n            t.children = []\n        } else {\n            //It is never a good idea to allow an item to be a child of a parent more than once.\n            //Trust me.\n            len = t.children.length\n            for (i = 0; i < len; i += 1) {\n                if (t.children[i] === o) {\n                    return false\n                }\n            }\n        }\n        if (t.childrenToBeAdded === undefined) {\n            t.childrenToBeAdded = []\n        } else {\n            //Check here too, in case it was added multiple times per frame.\n            len = t.childrenToBeAdded.length\n            for (i = 0; i < len; i += 1) {\n                if (t.childrenToBeAdded[i] === o) {\n                    return false\n                }\n            }\n        }\n\n        t.childrenToBeAdded.push(o)\n        return true\n    },\n    removeFunc: function(o) {\n        if (o.onRemove !== undefined) {\n            o.onRemove()\n        }\n        o.expired = true\n    },\n    destroyFunc: function() {\n        if (this.onRemove !== undefined) {\n            this.onRemove()\n        }\n        this.expired = true\n    },\n    updateMatricesFunc: function(viewMatrix) {\n        var t = this,\n            m = NPos3d.Maths,\n            p = t.parent\n        //localScale: ,\n        //localRotation: ,\n        //localComposite: ,\n        //globalComposite\n\n        //START updating the object's local matrices\n\n        //scale\n        m.mat4P3Scale(m.__mat4Identity, t.scale, t.matrices.localScale)\n\n        //rotate\n        m.eulerToMat4(t.rot, t.rotOrder, t.matrices.localRotation)\n\n        //composite matrix starts out as scale, no need to multiply\n        m.mat4Set(t.matrices.localComposite, t.matrices.localScale)\n        m.mat4Mul(t.matrices.localComposite, t.matrices.localRotation, t.matrices.localComposite)\n        //no need to multiply the local composite, adding 3 keys will be faster\n        //this is also why we don't need a local localPosition matrix.\n        m.mat4P3Translate(t.matrices.localComposite, t.pos, t.matrices.localComposite)\n\n        //END updating the object's local matrices\n\n        //Multiply the localComposite by the patent's globalComposite to get this object's globalComposite\n        if (p && !p.isScene) {\n            m.mat4Mul(t.matrices.localComposite, p.matrices.globalComposite, t.matrices.globalComposite)\n        } else if (viewMatrix != undefined) {\n            m.mat4Mul(t.matrices.localComposite, p.viewMatrix, t.matrices.globalComposite)\n        } else {\n            m.mat4Set(t.matrices.globalComposite, t.matrices.localComposite)\n        }\n\n        m.p3Mat4Mul([0, 0, 0], t.matrices.globalComposite, t.gPos) //because it rocks to be able to read a global position\n        m.p3Mat4Mul(t.scale, t.matrices.globalComposite, t.gScale) //Would this even work?\n    },\n    recursivelyUpdateMatrices: function rUM(o) {\n        if (o.parent && !o.parent.isScene) {\n            rUM(o.parent)\n        }\n        o.updateMatrices()\n    },\n    transformPoints: function(o, outPoints) {\n        var m = NPos3d.Maths, i\n        for (i = 0; i < o.shape.points.length; i += 1) {\n            outPoints[i] = m.p3Mat4Mul(o.shape.points[i], o.matrices.globalComposite, outPoints[i])\n        }\n    },\n    getTransformedPointsFunc: function() {\n        var t = this\n        var transformedPoints = []\n        if (t.shape && t.shape.points && t.shape.points.length) {\n            NPos3d.recursivelyUpdateMatrices(t)\n            NPos3d.transformPoints(t, transformedPoints)\n        }\n        return transformedPoints\n    },\n    getWorldPositionFunc: function() {\n        NPos3d.recursivelyUpdateMatrices(this)\n        return NPos3d.Maths.p3Mat4Mul([0, 0, 0], this.matrices.globalComposite)\n    },\n    renderFunc: function() {\n        //This function should be assigned to objects in the scene which will be rendered;\n        //Example: myObject.render = NPos3d.renderFunc;\n        var t = this //should be referring to the object being rendered\n        t.updateMatrices(t, t.scene.viewMatrix)\n        if (!t.shape || !t.shape.points || !t.shape.points.length) {\n            t.transformedPointCache.length = 0\n        } else {\n            t.scene.updateTransformedPointCache(t)\n            //if there are no points, there is nothing to render with these methods!\n            if (t.transformedPointCache.length > 0) {\n                if (t.renderStyle === 'both' || t.renderStyle === 'lines') {\n                    if (\n                        //I can't render a line if I don't have at least 2 points and 1 line.\n                        t.transformedPointCache.length > 1 &&\n                        t.shape.lines !== undefined &&\n                        typeof t.shape.lines.length === 'number' &&\n                        t.shape.lines.length > 0\n                    ) {\n                        t.scene.drawLines(t)\n                    }\n                }\n                if (t.renderStyle === 'both' || t.renderStyle === 'points') {\n                    t.scene.drawPoints(t)\n                }\n                if (t.renderStyle !== 'both' && t.renderStyle !== 'lines' && t.renderStyle !== 'points') {\n                    throw 'Invalid renderStyle specified: ' + t.renderStyle\n                }\n            }\n        }\n        if (t.postRender) {\n            t.postRender()\n        }\n    }\n}\n\n//Here lies almost anything related to trig/calc\nNPos3d.Maths = {\n    pi: Math.PI,\n    tau: (Math.PI * 2),\n    deg: (Math.PI / 180),\n    sin: Math.sin,\n    cos: Math.cos,\n    square: function(num) {\n        return num * num\n    },\n    //--------------------------------\n    //Some basic boundary / collission testing maths.\n    //--------------------------------\n    //I'm sure this function causes lag. Please use the 2D and 3D speciffic versions instead.\n    pointInNBounds: function(point, bounds) {\n        var d\n        //Works for 2D, 3D, and nD! Please, please feed in bounds generated like the line below.\n        //var bounds = nGetBounds(pointList);\n        //d stands for dimension\n        for (d = 0; d < point.length; d += 1) {\n            //dimensional value check\n            if (point[d] < bounds[0][d] || point[d] > bounds[1][d]) {\n                return false\n            }\n        }\n        return true\n    },\n    pointIn2dBounds: function(point, bounds) {\n        //Works for 2D! Please, please feed in bounds generated like the line below.\n        //var bounds = nGetBounds(pointList);\n        //dimensional value check\n        if (\n            point[0] < bounds[0][0] || point[0] > bounds[1][0] ||\n            point[1] < bounds[0][1] || point[1] > bounds[1][1]\n        ) {\n            return false\n        }\n        return true\n    },\n    pointIn3dBounds: function(point, bounds) {\n        //Works for 3D! Please, please feed in bounds generated like the line below.\n        //var bounds = nGetBounds(pointList);\n        //dimensional value check\n        if (\n            point[0] < bounds[0][0] || point[0] > bounds[1][0] ||\n            point[1] < bounds[0][1] || point[1] > bounds[1][1] ||\n            point[2] < bounds[0][2] || point[2] > bounds[1][2]\n        ) {\n            return false\n        }\n        return true\n    },\n    //--------------------------------\n    //This is where all of the 3D and math happens\n    //--------------------------------\n    getSquareVecLength2D: function(x, y) {\n        return NPos3d.Maths.square(x) + NPos3d.Maths.square(y)\n    },\n    getVecLength2D: function(x, y) {\n        return Math.sqrt(NPos3d.Maths.getSquareVecLength2D(x, y))\n    },\n    getRelativeAngle3D: function(p3) { //DO NOT try to optimize out the use of Math.sqrt in this function!!!\n        var topAngle = Math.atan2(p3[1], p3[0]),\n            length = NPos3d.Maths.getVecLength2D(p3[0], p3[1]),\n            sideAngle = -Math.atan2(p3[2], length)\n        return [0, sideAngle, topAngle]\n    },\n    p3Add: function(a, b, outputPoint) {\n        var o = outputPoint || []\n        o[0] = a[0] + b[0]\n        o[1] = a[1] + b[1]\n        o[2] = a[2] + b[2]\n        o[3] = a[3] //preserve point color\n        return o\n    },\n    p3Sub: function(a, b, outputPoint) {\n        var o = outputPoint || []\n        o[0] = a[0] - b[0]\n        o[1] = a[1] - b[1]\n        o[2] = a[2] - b[2]\n        o[3] = a[3] //preserve point color\n        return o\n    },\n    pointAt: function(o, endPos) {\n        var m = NPos3d.Maths,\n            posDiff = m.p3Sub(endPos, o.gPos)\n        //works only for this rotOrder at the moment\n        if (o.rotOrder !== [2, 1, 0]) {\n            o.rotOrder = [2, 1, 0]\n        }\n        o.rot = m.getRelativeAngle3D(posDiff)\n    },\n    __mat4Identity: [\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1\n    ],\n    makeMat4: function() {\n        return this.__mat4Identity.slice()\n    },\n    mat3ToMat4Translation: [\n        [0, 1, 2],\n        [4, 5, 6],\n        [8, 9, 10]\n    ],\n    rotOrders: {\n        /* i, j, k, parity */\n        '0,1,2': [0, 1, 2, 0], /* XYZ */\n        '0,2,1': [0, 2, 1, 1], /* XZY */\n        '1,0,2': [1, 0, 2, 1], /* YXZ */\n        '1,2,0': [1, 2, 0, 0], /* YZX */\n        '2,0,1': [2, 0, 1, 0], /* ZXY */\n        '2,1,0': [2, 1, 0, 1]  /* ZYX */\n    },\n    //The below function mostly converted from Blender source (so much love for team Blender),\n    //plus a little redundancy reduction if no rotation or same as last rotation\n    //Original function was named: eulO_to_mat3 - Construct 3x3 matrix from Euler angles (in radians).\n    //http://projects.blender.org/scm/viewvc.php/trunk/blender/source/blender/blenlib/intern/math_rotation.c?view=markup&root=bf-blender\n    eulerToMat4: function(euler, order, outputMatrix) {\n        var m = this,\n            o = outputMatrix || m.makeMat4(),\n            M = m.mat3ToMat4Translation,\n            eulerString = euler.toString(),\n            orderString = order.toString(),\n            R = m.rotOrders[orderString],\n            i = R[0],\n            j = R[1],\n            k = R[2],\n            parity = R[3],\n            ti, tj, th, ci, cj, ch, si, sj, sh, cc, cs, sc, ss\n        if (o.euler !== eulerString && o.rotOrder !== orderString) {\n            o.euler = eulerString\n            o.order = orderString\n            if (eulerString === '0,0,0') { //if no rotation, do no work and just return an identity matrix\n                o[0] = 1\n                o[1] = 0\n                o[2] = 0\n                o[4] = 0\n                o[5] = 1\n                o[6] = 0\n                o[8] = 0\n                o[9] = 0\n                o[10] = 1\n            } else {\n                //below here is all of the Blender magic\n                //ti, th, tj are all inverted for NPos3d purposes\n                if (parity) {\n                    ti = euler[i]\n                    tj = euler[j]\n                    th = euler[k]\n                } else {\n                    ti = -euler[i]\n                    tj = -euler[j]\n                    th = -euler[k]\n                }\n\n                ci = m.cos(ti)\n                cj = m.cos(tj)\n                ch = m.cos(th)\n                si = m.sin(ti)\n                sj = m.sin(tj)\n                sh = m.sin(th)\n\n                cc = ci * ch\n                cs = ci * sh\n                sc = si * ch\n                ss = si * sh\n\n                o[M[i][i]] = cj * ch\n                o[M[j][i]] = sj * sc - cs\n                o[M[k][i]] = sj * cc + ss\n                o[M[i][j]] = cj * sh\n                o[M[j][j]] = sj * ss + cc\n                o[M[k][j]] = sj * cs - sc\n                o[M[i][k]] = -sj\n                o[M[j][k]] = cj * si\n                o[M[k][k]] = cj * ci\n            }\n        }\n        return o\n    },\n    mat4Set: function(a, b) { // essentially `a = b`\n        a[0] = b[0], a[1] = b[1], a[2] = b[2], a[3] = b[3],\n            a[4] = b[4], a[5] = b[5], a[6] = b[6], a[7] = b[7],\n            a[8] = b[8],\n            a[9] = b[9],\n            a[10] = b[10], a[11] = b[11],\n            a[12] = b[12], a[13] = b[13], a[14] = b[14], a[15] = b[15],\n            a.euler = b.euler, a.order = b.order\n        return a\n    },\n    mat4Mul: function(a, b, outputMatrix) {\n        var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3], a04 = a[4], a05 = a[5], a06 = a[6], a07 = a[7],\n            a08 = a[8],\n            a09 = a[9],\n            a10 = a[10], a11 = a[11], a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15],\n            b00 = b[0], b01 = b[1], b02 = b[2], b03 = b[3], b04 = b[4], b05 = b[5], b06 = b[6], b07 = b[7],\n            b08 = b[8],\n            b09 = b[9],\n            b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15],\n            o = outputMatrix || []\n        //performance testing this approach versus`o[0] = b[1] * a[1] ...`\n        //on 10 million points indicated that this is a lot faster\n        o[0] = b00 * a00 + b01 * a04 + b02 * a08 + b03 * a12\n        o[1] = b00 * a01 + b01 * a05 + b02 * a09 + b03 * a13\n        o[2] = b00 * a02 + b01 * a06 + b02 * a10 + b03 * a14\n        o[3] = b00 * a03 + b01 * a07 + b02 * a11 + b03 * a15\n        o[4] = b04 * a00 + b05 * a04 + b06 * a08 + b07 * a12\n        o[5] = b04 * a01 + b05 * a05 + b06 * a09 + b07 * a13\n        o[6] = b04 * a02 + b05 * a06 + b06 * a10 + b07 * a14\n        o[7] = b04 * a03 + b05 * a07 + b06 * a11 + b07 * a15\n        o[8] = b08 * a00 + b09 * a04 + b10 * a08 + b11 * a12\n        o[9] = b08 * a01 + b09 * a05 + b10 * a09 + b11 * a13\n        o[10] = b08 * a02 + b09 * a06 + b10 * a10 + b11 * a14\n        o[11] = b08 * a03 + b09 * a07 + b10 * a11 + b11 * a15\n        o[12] = b12 * a00 + b13 * a04 + b14 * a08 + b15 * a12\n        o[13] = b12 * a01 + b13 * a05 + b14 * a09 + b15 * a13\n        o[14] = b12 * a02 + b13 * a06 + b14 * a10 + b15 * a14\n        o[15] = b12 * a03 + b13 * a07 + b14 * a11 + b15 * a15\n        return o\n    },\n    mat4P3Translate: function(m, v, outputMatrix) {\n        var o = outputMatrix || this.makeMat4(),\n            aX = m[3],\n            aY = m[7],\n            aZ = m[11],\n            x = v[0],\n            y = v[1],\n            z = v[2]\n\n        o[3] = aX + x\n        o[7] = aY + y\n        o[11] = aZ + z\n        return o\n    },\n    mat4P3Scale: function(m, v, outputMatrix) { //scales both rotation and translation\n        var o = outputMatrix || this.makeMat4(),\n            x = v[0],\n            y = v[1],\n            z = v[2],\n            a00 = m[0],\n            a01 = m[1],\n            a02 = m[2],\n            a03 = m[3],\n            a04 = m[4],\n            a05 = m[5],\n            a06 = m[6],\n            a07 = m[7],\n            a08 = m[8],\n            a09 = m[9],\n            a10 = m[10],\n            a11 = m[11]\n\n        o[0] = a00 * x\n        o[1] = a01 * x\n        o[2] = a02 * x\n        o[3] = a03 * x\n        o[4] = a04 * y\n        o[5] = a05 * y\n        o[6] = a06 * y\n        o[7] = a07 * y\n        o[8] = a08 * z\n        o[9] = a09 * z\n        o[10] = a10 * z\n        o[11] = a11 * z\n        return o\n    },\n    p3Mat4Mul: function(v, m, outputPoint) {\n        var o = outputPoint || [],\n            x = v[0],\n            y = v[1],\n            z = v[2],\n            color = v[3] || false //Point Color Preservation - no need to offset or rotate it\n        o[0] = (x * m[0]) + (y * m[1]) + (z * m[2]) + m[3]\n        o[1] = (x * m[4]) + (y * m[5]) + (z * m[6]) + m[7]\n        o[2] = (x * m[8]) + (y * m[9]) + (z * m[10]) + m[11]\n        //o[3] = (x * m[12]) + (y * m[13]) + (z * m[14]) + (w * m[15]);\n        o[3] = color\n        return o\n    },\n    __matrix: false,\n    //Probably performance hazardous but Human friendly - use only sparingly.\n    p3Rotate: function(p3, rot, order) {\n        var m = NPos3d.Maths\n        if (!m.__matrix) {\n            m.__matrix = m.makeMat4()\n        }\n        m.eulerToMat4(rot, order, m.__matrix)\n        return m.p3Mat4Mul(p3, m.__matrix)\n    },\n    getP3Scaled: function(p3, scale) {\n        //return p3;\n        return [p3[0] * scale[0], p3[1] * scale[1], p3[2] * scale[2]]\n    },\n    getP2Offset: function(p2, offset) {\n        //an efficient hack to quickly add an offset to a 2D point\n        return [p2[0] + offset[0], p2[1] + offset[1]]\n    },\n    getP3String: function(p3) {\n        return 'x: ' + p3[0] + ' y: ' + p3[1] + ' z: ' + p3[2]\n    },\n    nGetBounds: function(pointList) {\n        //Works for 2D, 3D, and nD!\n        if (pointList.length < 1) {\n            return [[0, 0, 0], [0, 0, 0]]\n        } //assume 3D if empty\n        var min = []\n        var max = []\n        var p = pointList[0]\n        for (var d = 0; d < p.length; d += 1) {\n            min[d] = p[d]\n            max[d] = p[d]\n        }\n        for (var i = 1; i < pointList.length; i += 1) {\n            var p = pointList[i]\n            //d stands for dimension\n            for (var d = 0; d < p.length; d += 1) {\n                if (p[d] < min[d]) {\n                    min[d] = p[d]\n                } else if (p[d] > max[d]) {\n                    max[d] = p[d]\n                }\n            }\n        }\n        return [min, max]\n    },\n    makeBBCubeFromTwoPoints: function(bbMinOffset, bbMaxOffset) {\n        return [\n            [bbMinOffset[0], bbMinOffset[1], bbMaxOffset[2]],\n            [bbMaxOffset[0], bbMinOffset[1], bbMaxOffset[2]],\n            [bbMaxOffset[0], bbMaxOffset[1], bbMaxOffset[2]],\n            [bbMinOffset[0], bbMaxOffset[1], bbMaxOffset[2]],\n            [bbMinOffset[0], bbMinOffset[1], bbMinOffset[2]],\n            [bbMaxOffset[0], bbMinOffset[1], bbMinOffset[2]],\n            [bbMaxOffset[0], bbMaxOffset[1], bbMinOffset[2]],\n            [bbMinOffset[0], bbMaxOffset[1], bbMinOffset[2]]\n        ]\n    }\n}\n\nNPos3d.Utils = {\n    subset: function(ob, string) {\n        var output = {}, propList = string.split(','), i\n        for (i = 0; i < propList.length; i += 1) {\n            output[propList[i]] = ob[propList[i]]\n        }\n        return output\n    },\n    initVal: function() { //A function designed to compensate for lack of function (value = default)\n        var i\n        if (arguments.length < 1) {\n            throw 'ur doin it wrong. initVal function requires > 1 arguments'\n        }\n        for (i = 0; i < arguments.length; i += 1) {\n            if (arguments[i] !== undefined && arguments[i] !== null) {\n                return arguments[i]\n            }\n        }\n        return arguments[i]\n    },\n    get_type: function(input) {\n        if (input === null) {\n            return '[object Null]' // special case\n        }\n        return Object.prototype.toString.call(input)\n    },\n    displayDebug: function(input) {\n        var u = NPos3d.Utils, output = [], keyName\n        if (u.get_type(input).match(/Number/i)) {\n            output.push(input + '<br>')\n        } else {\n            output.push(input.constructor.name + '<br>')\n        }\n        for (keyName in input) {\n            if (input.hasOwnProperty(keyName)) {\n                output.push(keyName.toString() + ': ' + u.get_type(input[keyName]) + ' - ' + input[keyName] + '<br>')\n            }\n        }\n        if (!u.display) {\n            u.display = document.createElement('pre')\n            u.display.style.display = 'block'\n            u.display.style.position = 'fixed'\n            u.display.style.top = '0'\n            u.display.style.left = '0'\n            //u.display.style.zIndex = '9001'\n            u.display.style.fontFamily = 'monospace'\n            u.display.style.fontSize = '10px'\n            u.display.style.lineHeight = '7px'\n            u.display.style.whiteSpace = 'pre-wrap'\n            u.display.style.color = 'hsl(' + Math.round(Math.random() * 360) + ',100%,50%)'\n        }\n        document.body.appendChild(u.display)\n        u.display.innerHTML += output.join('\\n')\n    },\n    clearDebug: function() {\n        var u = NPos3d.Utils\n        if (u.display) {\n            u.display.innerHTML = ''\n            if (u.display.parentNode === document.body) {\n                document.body.removeChild(u.display)\n            }\n        }\n    }\n}\n\nNPos3d.Scene = function(args) {\n    var t = this, type = 'Scene'\n    if (t.type !== type) {\n        throw 'You must use the `new` keyword when invoking the ' + type + ' constructor.'\n    }\n    args = args || {}\n\n    t.debugViewport = args.debugViewport || false\n    t.mpos = {x: 0, y: 0}\n    t.pixelScale = args.pixelScale || 1\n    t.globalCompositeOperation = args.globalCompositeOperation || 'source-over'\n    t.backgroundColor = args.backgroundColor || 'transparent'\n    t.strokeStyle = args.strokeStyle || '#fff'\n    t.fillStyle = args.fillStyle || '#fff'\n    t.lineWidth = args.lineWidth || undefined\n    t.fullScreen = !!(args.fullScreen === undefined || args.fullScreen === true)\n    t.forceRealPixels = !!(args.forceRealPixels === undefined || args.forceRealPixels === true)\n\n    t.oldAndroid = /android 2/i.test(navigator.userAgent)\n    t.mobileSafari = /iphone|ipad|ipod/i.test(navigator.userAgent)\n    t.isMobile = t.oldAndroid || t.mobileSafari || /android|blackberry|mini|windows\\sce|palm/i.test(navigator.userAgent)\n    t.isChrome = /Chrome/i.test(navigator.userAgent)\n    t.newChromeMobile = t.isMobile && t.isChrome && parseInt(navigator.userAgent.match(/Chrome\\/(\\d*)/i)[1]) > 18\n    t.mobileFireFox = t.isMobile && /firefox/i.test(navigator.userAgent)\n    t.useOuterWidth = t.oldAndroid || t.mobileFireFox\n\n    t.canvasId = args.canvasId || 'canvas'\n    t.existingCanvas = args.canvas !== undefined\n    t.canvas = args.canvas || document.createElement('canvas')\n    t.canvas.style.backgroundColor = args.canvasStyleColor || '#000'\n    t.canvas.id = t.canvasId\n    t.c = t.canvas.getContext('2d')\n    if (args.canvas === undefined) {\n        document.body.appendChild(t.canvas)\n    }\n    if (t.fullScreen) {\n        t.canvas.style.display = 'block'\n        t.canvas.style.position = 'fixed'\n        t.canvas.style.top = 0\n        t.canvas.style.left = 0\n        if (args.zIndex !== undefined) {\n            t.canvas.style.zIndex = args.zIndex\n        }\n        if (\n            window.orientation !== undefined &&\n            window.outerWidth === 0\n        ) { //it's broken because it's an iOS device\n            t.checkWindow = function() {\n                var scaleMultiplier = t.forceRealPixels ? window.devicePixelRatio : 1,\n                    actualWidth = window.screen.width\n                if (window.orientation !== 0) {\n                    actualWidth = window.screen.height\n                }\n                t.w = Math.ceil(scaleMultiplier * actualWidth / t.pixelScale)\n                t.h = Math.ceil(window.innerHeight / t.pixelScale)\n            }\n        } else if (t.useOuterWidth) {\n            t.checkWindow = function() {\n                t.w = Math.ceil(window.outerWidth / t.pixelScale)\n                t.h = Math.ceil(window.outerHeight / t.pixelScale)\n            }\n        } else {\n            t.checkWindow = function() {\n                t.w = Math.ceil(window.innerWidth / t.pixelScale)\n                t.h = Math.ceil(window.innerHeight / t.pixelScale)\n            }\n        }\n    } else {\n        t.checkWindow = function() {\n            t.w = Math.ceil(t.canvas.width / t.pixelScale)\n            t.h = Math.ceil(t.canvas.height / t.pixelScale)\n        }\n        if (t.canvas.width == '') {\n            t.canvas.width = args.width || 512\n        }\n        if (t.canvas.height == '') {\n            t.canvas.height = args.height || 384\n        }\n    }\n    if (t.pixelScale !== 1) {\n        t.canvas.style.imageRendering = '-moz-crisp-edges'\n        t.canvas.style.imageRendering = '-webkit-optimize-contrast'\n        //reference: http://stackoverflow.com/questions/10525107/html5-canvas-image-scaling-issue\n        t.c.imageSmoothingEnabled = false\n        t.c.mozImageSmoothingEnabled = false\n        t.c.webkitImageSmoothingEnabled = false\n    }\n    if (!t.isMobile && !t.existingCanvas) {\n        t.canvas.style.position = 'fixed'\n    }\n    //console.log(isMobile);\n\n    t.checkWindow()\n    t.resize()\n\n    t.camera = args.camera || new NPos3d.Camera({scene: t})\n\n    t.canvas.style.backgroundColor = t.canvasStyleColor\n    t.cursorPosition = args.canvas !== undefined ? 'absolute' : 'relative'\n    t.mouseHandler = function(e) {\n        var canvasOffsetX = 0,\n            canvasOffsetY = 0,\n            pointX = 0,\n            pointY = 0\n        if (e.target === t.canvas || e.target === window) {\n            e.preventDefault()\n        }\n        if (!t.fullScreen) {\n            var offset = t.canvas.getBoundingClientRect()\n            canvasOffsetX = offset.left\n            canvasOffsetY = offset.top\n        }\n        if (e.touches && e.touches.length) {\n            pointX = e.touches[0].clientX\n            pointY = e.touches[0].clientY\n        } else {\n            pointX = e.clientX\n            pointY = e.clientY\n        }\n        if (t.cursorPosition === 'absolute') {\n            pointX -= canvasOffsetX\n            pointY -= canvasOffsetY\n        }\n        t.mpos.x = Math.ceil((pointX / t.pixelScale) - t.cx)\n        t.mpos.y = Math.ceil((pointY / t.pixelScale) - t.cy)\n        //console.log(t.mpos.x, t.mpos.y);\n    }\n    window.addEventListener('mousemove', t.mouseHandler, false)\n    window.addEventListener('touchstart', t.mouseHandler, false)\n    window.addEventListener('touchmove', t.mouseHandler, false)\n    //window.addEventListener('touchend',t.mouseHandler,false);\n\n    t.children = []\n    t.renderInstructionList = []\n\n    t.add(t.camera)\n    t.start()\n    t.globalize()\n    return this\n}\n\nNPos3d.Scene.prototype = {\n    type: 'Scene',\n    isScene: true,\n    globalize: function() {\n        //Because it's a pain to have to reference too much. I'll unpack my tools so I can get to work.\n        window.pi = NPos3d.Maths.pi\n        window.tau = NPos3d.Maths.tau\n        window.deg = NPos3d.Maths.deg\n        window.sin = NPos3d.Maths.sin\n        window.cos = NPos3d.Maths.cos\n        window.square = NPos3d.Maths.square\n    },\n    resize: function() {\n        var t = this\n        t.cx = Math.floor(t.w / 2)\n        t.cy = Math.floor(t.h / 2)\n        t.mpos.x = 0\n        t.mpos.y = 0\n        t.canvas.width = t.w\n        t.canvas.height = t.h\n        if (t.pixelScale !== 1) {\n            t.canvas.style.width = Math.ceil(t.w * t.pixelScale) + 'px'\n            t.canvas.style.height = Math.ceil(t.h * t.pixelScale) + 'px'\n        } else {\n            t.canvas.style.width = t.w + 'px'\n            t.canvas.style.height = t.h + 'px'\n        }\n        t.lw = t.w\n        t.lh = t.h\n        if (t.isMobile) {\n            // Эта функция убивает производительность на мобилке. Нужно выяснить, что именно она делает\n            t.handleViewportShenanigans()\n        }\n    },\n    handleViewportShenanigans: function() {\n        //Normally, something like this should never exist under any reasonable circumstances,\n        //but mobile browsers refuse to allow me to display pages pixel-per-pixel in any sane way.\n        //This does 3 things -\n        //\t1: Make the canvas very, very large, which kills performance\n        //\t2: Make the render output SUCK\n        //\t3: HULK SMASH!!!\n        var t = this,\n            meta = document.getElementById('vp'),\n            viewportContentString\n        if (!meta) {\n            meta = document.createElement('meta')\n            meta.setAttribute('name', 'viewport')\n            meta.setAttribute('id', 'vp')\n        }\n        if (meta && meta.parentNode === document.head) {\n            document.head.removeChild(meta)\n        }\n        if (t.forceRealPixels) {\n            viewportContentString = t.getViewportForceRealPixelsString()\n        } else {\n            viewportContentString = t.getCommonViewportWidth() + t.commonViewportProperties\n        }\n        meta.setAttribute('content', viewportContentString)\n        document.head.appendChild(meta)\n    },\n    getCommonViewportWidth: function() {\n        var t = this,\n            result = 'width=device-width'\n        if (t.mobileSafari) {\n            result = 'width=' + t.w\n        }\n        return result\n    },\n    commonViewportProperties: ', initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no',\n    getViewportForceRealPixelsString: function() {\n        var t = this,\n            result = '',\n            ratio, repairedRatioString\n        if (t.mobileFireFox) {\n            result = 'width=' + t.w + ', user-scalable=no, target-densityDpi=device-dpi'\n        } else if (t.mobileSafari || t.newChromeMobile) {\n            ratio = 1 / (window.devicePixelRatio || 1)\n            repairedRatioString = ', initial-scale=' + ratio + ', minimum-scale=' + ratio + ', maximum-scale=' + ratio + ', user-scalable=no'\n            result = t.getCommonViewportWidth() + repairedRatioString\n        } else {\n            result = 'width=device-width, target-densityDpi=device-dpi' + t.commonViewportProperties\n        }\n        return result\n    },\n    updateRecursively: function updateRecursively(o) {\n        if (!o.isScene) {\n            o.update()\n        }\n        if (o.children) {\n            o.children.forEach(updateRecursively)\n        }\n    },\n    renderRecursively: function renderRecursively(o) {\n        if (!o.isScene && o.render) {\n            o.render()\n        }\n        if (o.children) {\n            o.children.forEach(renderRecursively)\n        }\n    },\n    removeExpiredChildrenRecursively: function rECR(o) {\n        var len, i, child\n        if (o.children) {\n            len = o.children.length\n            for (i = len - 1; i >= 0; i -= 1) {\n                child = o.children[i]\n                rECR(child)\n                if (child.expired) {\n                    o.children.splice(i, 1)\n                    child.expired = false\n                    child.parent = false\n                    child.scene = false\n                }\n            }\n        }\n    },\n    addNewChildrenRecursively: function addNewChildrenRecursively(o) {\n        let child\n        let newChild\n        let scene = false\n\n        if (o.children !== undefined && o.children.length !== undefined && o.children.length > 0) {\n            for (let i = 0; i < o.children.length; i++) {\n                child = o.children[i]\n                addNewChildrenRecursively(child)\n            }\n        }\n        if (o.isScene === true) {\n            scene = o\n        } else {\n            scene = o.scene\n        }\n        //This bit is nifty: thanks to scene = false at init,\n        //if a node is parented to another node with no scene,\n        //then all child nodes have their scene removed as well.\n        if (o.childrenToBeAdded !== undefined && o.childrenToBeAdded.length !== undefined && o.childrenToBeAdded.length > 0) {\n            for (let i = 0; i < o.childrenToBeAdded.length; i++) {\n                newChild = o.childrenToBeAdded[i]\n                if (newChild.expired) {\n                    newChild.expired = false\n                } else {\n                    o.children.push(newChild)\n                    newChild.parent = o\n                    newChild.scene = scene\n                    if (newChild.onAdd !== undefined) {\n                        newChild.onAdd()\n                    }\n                }\n            }\n            delete o.childrenToBeAdded\n        }\n    },\n    render: function() {\n        var t = this, i, len, instruction\n        if (t.renderInstructionList !== undefined && t.renderInstructionList.length > 0) {\n            len = t.renderInstructionList.length\n            for (i = 0; i < len; i += 1) {\n                instruction = t.renderInstructionList[i]\n                instruction.method(t.c, instruction.args)\n            }\n        }\n    },\n    update: function() {\n        let t = this\n        let u = NPos3d.Utils\n\n        try {\n            t.checkWindow()\n            if (t.w !== t.lw || t.h !== t.lh) {\n                t.resize()\n            }\n\n            if (t.debugViewport) {\n                let newSize = u.subset(window, 'innerHeight,innerWidth,outerWidth,outerHeight,devicePixelRatio')\n                newSize.screenSizeWidth = window.screen.width\n                newSize.screenSizeHeight = window.screen.height\n                newSize.documentElementClientWidth = document.documentElement.clientWidth\n                newSize.documentElementClientHeight = document.documentElement.clientHeight\n                newSize.devicePixelRatio = window.devicePixelRatio || 1\n                newSize.navigator = navigator.userAgent\n                u.clearDebug()\n                u.displayDebug(newSize)\n            }\n\n            t.renderInstructionList = [] //the render methods on each object are supposed to populate this array\n            t.addNewChildrenRecursively(t)\n            t.updateRecursively(t)\n            t.viewMatrix = t.inverseMatrix(t.camera)\n            t.renderRecursively(t)\n            t.removeExpiredChildrenRecursively(t)\n\n            if (t.backgroundColor === 'transparent') {\n                t.c.clearRect(0, 0, t.w, t.h)\n            } else {\n                t.c.fillStyle = t.backgroundColor\n                t.c.fillRect(0, 0, t.w, t.h)\n            }\n            t.c.save()\n            t.c.globalCompositeOperation = t.globalCompositeOperation\n            t.c.translate(t.cx, t.cy)\n            t.renderInstructionList.sort(t.sortRenderInstructionByZDepth)\n            t.render()\n            t.c.restore()\n        } catch (e) {\n            t.stop()\n            console.log(e, e.stack, t)\n        }\n    },\n    start: function() {\n        let t = this\n\n        let loop = () => {\n            t.update()\n            t.timer = requestAnimationFrame(loop)\n        }\n        loop()\n    },\n    stop: function() {\n        cancelAnimationFrame(this.timer)\n    },\n    sortRenderInstructionByZDepth: function(a, b) {\n        return a.z - b.z\n    },\n    recurseForInheritedProperties: function rfip(o, propName) {\n        if (o[propName] !== undefined) {\n            return o[propName]\n        }\n        if (o.parent) {\n            return rfip(o.parent, propName)\n        }\n    },\n    drawLine: function(c, o) {\n        c.beginPath()\n        c.moveTo(o.a.x, o.a.y)\n        c.lineTo(o.b.x, o.b.y)\n        if (c.strokeStyle !== o.color) {\n            c.strokeStyle = o.color\n        }\n        if (c.lineWidth !== o.lineWidth) {\n            c.lineWidth = o.lineWidth\n        }\n        if (c.lineCap !== 'round') {\n            c.lineCap = 'round'\n        }\n        c.stroke()\n    },\n    drawCircle: function(c, o) {\n        var scale = o.pos.scale * o.pointScale\n        if (scale >= 0) {\n            c.moveTo(o.pos.x, o.pos.y)\n            c.beginPath()\n            c.arc(o.pos.x, o.pos.y, scale, 0, tau, false)\n            if (o.pointStyle === 'fill') {\n                if (c.fillStyle !== o.color) {\n                    c.fillStyle = o.color\n                }\n                c.fill()\n            } else if (o.pointStyle === 'stroke') {\n                if (c.strokeStyle !== o.color) {\n                    c.strokeStyle = o.color\n                }\n                if (c.lineWidth !== o.lineWidth) {\n                    c.lineWidth = o.lineWidth\n                }\n                if (c.lineCap !== 'round') {\n                    c.lineCap = 'round'\n                }\n                c.stroke()\n            }\n        }\n    },\n    inverseMatrix: function(o) {\n        var m = NPos3d.Maths\n        var resultMatrix = m.makeMat4()\n        do {\n            var rotationMatrix = m.makeMat4()\n            m.eulerToMat4(\n                o.rot.map(function(n) {\n                    return -n\n                }),\n                o.rotOrder.slice().reverse(),\n                rotationMatrix\n            )\n            m.mat4P3Translate(resultMatrix, [-o.pos[0], -o.pos[1], -o.pos[2]], resultMatrix)\n            m.mat4Mul(resultMatrix, rotationMatrix, resultMatrix)\n            m.mat4P3Scale(resultMatrix, o.scale.map(function(n) {\n                return -n\n            }))\n            o = o.parent\n        } while (o && !o.isScene)\n        return resultMatrix\n    },\n    updateTransformedPointCache: function(o) {\n        var t = this, m = NPos3d.Maths, i, currentGlobalCompositeMatrixString\n        if (o.transformedPointCache.length !== o.shape.points.length) {\n            o.transformedPointCache.length = 0 //empty the array, keep the object reference\n            o.lastGlobalCompositeMatrixString = false\n        }\n        currentGlobalCompositeMatrixString = o.matrices.globalComposite.toString()\n        if (!o.lastGlobalCompositeMatrixString || o.lastGlobalCompositeMatrixString !== currentGlobalCompositeMatrixString) {\n            NPos3d.transformPoints(o, o.transformedPointCache)\n            o.boundingBox = m.nGetBounds(o.transformedPointCache)\n            o.lastGlobalCompositeMatrixString = currentGlobalCompositeMatrixString\n        }\n    },\n    lineRenderLoop: function(o) {\n        var t = this, m = NPos3d.Maths,\n            i, p3a, p3b\n        \n        // console.log(t.c)\n        //t.c.globalAlpha = 0.1\n        \n        for (i = 0; i < o.shape.lines.length; i += 1) {\n            //offset the points by the object's position\n            p3a = o.transformedPointCache[o.shape.lines[i][0]]\n            p3b = o.transformedPointCache[o.shape.lines[i][1]]\n\n            //if the depths of the first and second point in the line are not behind the camera...\n            //and the depths of the first and second point in the line are closer than the far plane...\n            if (\n                p3a[2] < t.camera.clipNear &&\n                p3b[2] < t.camera.clipNear &&\n                p3a[2] > t.camera.clipFar &&\n                p3b[2] > t.camera.clipFar\n            ) {\n\n                var p0 = t.camera.project3Dto2D(p3a)\n                var p1 = t.camera.project3Dto2D(p3b)\n                //                   min        max\n                var screenBounds = [[-t.cx, -t.cy], [t.cx, t.cy]]\n                var p0InBounds = m.pointIn2dBounds([p0.x, p0.y], screenBounds)\n                var p1InBounds = m.pointIn2dBounds([p1.x, p1.y], screenBounds)\n                //If the line is completely off screen, do not bother rendering it.\n                if (p0InBounds || p1InBounds) {\n\n                    \n\n\n                    t.renderInstructionList.push({\n                        method: t.drawLine,\n                        args: {\n                            a: p0,\n                            b: p1,\n                            //color: o.shape.lines[i][2] || o.shape.color || o.color || t.strokeStyle,\n                            color: o.shape.lines[i][2] || o.shape.color || o.color || t.strokeStyle,\n                            lineWidth: o.lineWidth || o.parent.lineWidth || t.lineWidth || 1\n                        },\n                        z: Math.max(p3a[2], p3b[2])\n                    })\n                }\n            }\n        }\n    },\n    drawLines: function(o) {\n        var t = this, m = NPos3d.Maths, i, bbCube, bbMinOffset, bbMaxOffset, bbOffScreen, bbp\n\n        if (o.renderAlways) {\n            t.lineRenderLoop(o)\n            return\n        }\n\n        bbMinOffset = o.boundingBox[0]\n        bbMaxOffset = o.boundingBox[1]\n\n        //Checking to see if any part of the bounding box is in front on the camera and closer than the far plane before bothering to do anything else...\n        if (bbMaxOffset[2] > t.camera.clipFar && bbMinOffset[2] < t.camera.clipNear && bbMaxOffset[2] > t.camera.clipFar && bbMaxOffset[2] < t.camera.clipNear) {\n            //Alright. It's in front and not behind. Now is the bounding box even partially on screen?\n            //8 points determine the cube... let's start from the top left, spiraling down clockwise\n            bbCube = m.makeBBCubeFromTwoPoints(bbMinOffset, bbMaxOffset)\n            bbOffScreen = true\n            //At some point in the future if I wanted to get really crazy, I could probably determine which order\n            //to sort the array above to orient the point closest to the center of the screen nearest the first of the list,\n            //so I don't bother checking all 8 points to determine if it's on screen - or even off screen.\n            for (i = 0; i < bbCube.length && bbOffScreen; i += 1) {\n                bbp = t.camera.project3Dto2D(bbCube[i])\n                if (bbp.x < t.cx && bbp.x > -t.cx && bbp.y < t.cy && bbp.y > -t.cy) {\n                    bbOffScreen = false\n                }\n            }\n            if (!bbOffScreen) {\n                t.lineRenderLoop(o)\n            }\n        }\n    },\n    drawPoints: function(o) {\n        var t = this, m = NPos3d.Maths, i, bbMinOffset, bbMaxOffset, bbCube, bbOffScreen, bbp\n\n        if (o.renderAlways) {\n            t.pointRenderLoop(o)\n            return\n        }\n\n        bbMinOffset = o.boundingBox[0]\n        bbMaxOffset = o.boundingBox[1]\n\n        //Checking to see if any part of the bounding box is in front on the camera and closer than the far plane before bothering to do anything else...\n        if (\n            bbMaxOffset[2] > t.camera.clipFar &&\n            bbMinOffset[2] < t.camera.clipNear &&\n            bbMaxOffset[2] > t.camera.clipFar &&\n            bbMaxOffset[2] < t.camera.clipNear\n        ) {\n            //Alright. It's in front and not behind. Now is the bounding box even partially on screen?\n            //8 points determine the cube... let's start from the top left, spiraling down clockwise\n            bbCube = m.makeBBCubeFromTwoPoints(bbMinOffset, bbMaxOffset)\n            bbOffScreen = true\n            //At some point in the future if I wanted to get really crazy, I could probably determine which order\n            //to sort the array above to orient the point closest to the center of the screen nearest the first of the list,\n            //so I don't bother checking all 8 points to determine if it's on screen - or even off screen.\n            for (i = 0; i < bbCube.length && bbOffScreen; i += 1) {\n                bbp = t.camera.project3Dto2D(bbCube[i])\n                if (bbp.x < t.cx && bbp.x > -t.cx && bbp.y < t.cy && bbp.y > -t.cy) {\n                    bbOffScreen = false\n                }\n            }\n            if (!bbOffScreen) {\n                t.pointRenderLoop(o)\n            }\n        }\n    },\n    pointRenderLoop: function(o) {\n        var t = this, m = NPos3d.Maths,\n            i, p3a, p0, screenBounds, circleArgs\n        for (i = 0; i < o.transformedPointCache.length; i += 1) {\n            //offset the points by the object's position\n            p3a = o.transformedPointCache[i]\n            //if the depth of the point is not behind the camera...\n            //and the depth of the point is closer than the far plane...\n            if (p3a[2] < t.camera.clipNear && p3a[2] > t.camera.clipFar) {\n                p0 = t.camera.project3Dto2D(p3a)\n                //                   min        max\n                screenBounds = [[-t.cx, -t.cy], [t.cx, t.cy]]\n                var p0InBounds = m.pointIn2dBounds([p0.x, p0.y], screenBounds)\n                //If the line is completely off screen, do not bother rendering it.\n                if (p0InBounds) {\n                    //console.log(p0.color);\n                    circleArgs = {\n                        pos: p0,\n                        pointScale: o.pointScale,\n                        pointStyle: o.pointStyle\n                    }\n                    if (o.pointStyle === 'fill') {\n                        circleArgs.color = p0.color || o.shape.color || o.color || t.fillStyle\n                    } else if (o.pointStyle === 'stroke') {\n                        circleArgs.color = p0.color || o.shape.color || o.color || t.strokeStyle\n                        circleArgs.lineWidth = o.lineWidth || o.scene.lineWidth || 1\n                    }\n                    t.renderInstructionList.push({\n                        method: t.drawCircle,\n                        args: circleArgs,\n                        z: p3a[2]\n                    })\n\n                }\n            }\n        }\n    },\n\n    add: NPos3d.addFunc,\n    remove: NPos3d.removeFunc\n}\n\nNPos3d.Camera = function(args) {\n    let t = this\n    args = args || {}\n\n    NPos3d.blessWith3DBase(t, args)\n    //Field Of View; Important!\n    t.clipNear = args.clipNear || -0.01\n    t.clipFar = args.clipFar || -9001\n    t.frustumMultiplier = args.frustumMultiplier || 0.75\n}\nNPos3d.Camera.prototype = {\n    type: 'Camera',\n    update: function() {\n        let t = this\n        t.pos[2] = Math.max(t.scene.w, t.scene.h) * t.frustumMultiplier\n        // console.log(t.frustumMultiplier)\n        // RECIPROCAL width / height of the frustum at ONE unit away from the camera\n        // this arranges it so that it is exactly the right number of pixels where z=0, given where the camera is now\n    },\n    project3Dto2D: function(p3) {\n        var t = this,\n            canvasDim = Math.max(t.scene.w, t.scene.h),\n            scale = 1 / -p3[2],\n            p2 = {\n                x: (p3[0] * canvasDim * t.frustumMultiplier * scale),\n                y: (p3[1] * canvasDim * t.frustumMultiplier * scale),\n                scale: canvasDim * t.frustumMultiplier * scale,\n                color: p3[3] || false\n            }\n        return p2\n    }\n}\n\nNPos3d.Geom = {\n    //The only reason this isn't with the rest of the shapes is because I need to use it inside the prototype of ob3D\n    cube: {\n        points: [\n            [10, 10, 10],\n            [10, 10, -10],\n            [10, -10, 10],\n            [10, -10, -10],\n            [-10, 10, 10],\n            [-10, 10, -10],\n            [-10, -10, 10],\n            [-10, -10, -10]\n        ],\n        lines: [[0, 1], [2, 3], [4, 5], [6, 7], [3, 1], [2, 0], [7, 5], [6, 4], [5, 1], [7, 3], [4, 0], [6, 2]]\n    },\n    axies: {\n        points: [\n            [4, 0, 0, '#f00'],\n            [32, 0, 0, '#f00'],\n            [22, 6, -6, '#f00'],\n            [22, -6, 6, '#f00'],\n            [0, 4, 0, '#0f0'],\n            [0, 32, 0, '#0f0'],\n            [6, 22, -6, '#0f0'],\n            [-6, 22, 6, '#0f0'],\n            [0, 0, 4, '#00f'],\n            [0, 0, 32, '#00f'],\n            [-6, 6, 22, '#00f'],\n            [6, -6, 22, '#00f']\n        ],\n        lines: [\n            [0, 1, '#f00'],\n            [1, 2, '#f00'],\n            [1, 3, '#f00'],\n            [4, 5, '#0f0'],\n            [5, 6, '#0f0'],\n            [5, 7, '#0f0'],\n            [8, 9, '#00f'],\n            [9, 10, '#00f'],\n            [9, 11, '#00f']\n        ]\n    }\n}\n\nNPos3d.blessWith3DBase = function(o, args) {\n    let m = NPos3d.Maths\n    o.pos = args.pos || [0, 0, 0]\n    o.rot = args.rot || [0, 0, 0]\n    o.rotOrder = args.rotOrder || o.rotOrder || [0, 1, 2]\n    o.scale = args.scale || o.scale || [1, 1, 1]\n    o.gPos = o.pos.slice() //global position\n    o.gScale = o.scale.slice() //global scale\n    o.matrices = {\n        localScale: m.makeMat4(),\n        localRotation: m.makeMat4(),\n        localComposite: m.makeMat4(),\n        globalComposite: m.makeMat4()\n    }\n    o.lastGlobalCompositeMatrixString = false\n    o.transformedPointCache = []\n    o.boundingBox = [[0, 0, 0], [0, 0, 0]]\n    o.shape = args.shape || o.shape\n    o.color = args.color || o.color || undefined\n    o.renderAlways = args.renderAlways || o.renderAlways || false\n    o.renderStyle = args.renderStyle || o.renderStyle || 'lines'//points, both\n    o.pointScale = args.pointScale || o.pointScale || 2\n    o.pointStyle = args.pointStyle || o.pointStyle || 'fill'//stroke\n    o.lineWidth = args.lineWidth || undefined\n    o.scene = args.scene\n\n    o.expired = false\n    o.add = NPos3d.addFunc\n    o.remove = NPos3d.removeFunc\n    o.destroy = NPos3d.destroyFunc\n    o.render = NPos3d.renderFunc\n    o.getTransformedPoints = NPos3d.getTransformedPointsFunc\n    o.getWorldPosition = NPos3d.getWorldPositionFunc\n    o.updateMatrices = NPos3d.updateMatricesFunc\n}\n\nNPos3d.Ob3D = function(args) {\n    var t = this, type = 'Ob3D'\n    if (t.type !== type) {\n        throw 'You must use the `new` keyword when invoking the ' + type + ' constructor.'\n    }\n    args = args || {}\n    NPos3d.blessWith3DBase(t, args)\n    return this\n}\n\nNPos3d.Ob3D.prototype = {\n    type: 'Ob3D',\n    shape: NPos3d.Geom.cube,\n    update: function() {\n    }\n}\n//Because it's just fine to spend 12K worth of data to include a sexy vector font that I designed in about an hour and a half\nNPos3d.Geom.font = {\n    '!': {'points': [[1, 0], [1, 2], [1, 3], [1, 4]], 'lines': [[0, 1], [2, 3]]},\n    '\"': {'points': [[1, 1], [1, 0], [0, 0], [0, 1]], 'lines': [[0, 1], [2, 3]]},\n    '#': {'points': [[2, 4], [1, 4], [0, 3], [0, 1], [1, 0], [2, 0], [2, 1], [2, 3]], 'lines': [[0, 5], [1, 4], [2, 7], [3, 6]]},\n    '$': {'points': [[1, 0], [1, 4], [0, 3], [0, 1], [2, 1], [2, 3]], 'lines': [[0, 1], [0, 3], [0, 4], [1, 2], [1, 5], [3, 5]]},\n    '%': {\n        'points': [[0, 4], [2, 0], [1, 4], [2, 3], [1, 3], [0, 1], [1, 0], [1, 1]],\n        'lines': [[0, 1], [2, 3], [2, 4], [3, 4], [5, 7], [5, 6], [6, 7]]\n    },\n    '&': {\n        'points': [[2, 4], [2, 1], [0, 1], [1, 0], [1, 2], [2, 3], [0, 3], [1, 4]],\n        'lines': [[0, 2], [1, 3], [2, 3], [4, 6], [5, 7], [6, 7]]\n    },\n    '\\'': {'points': [[1, 1], [1, 0]], 'lines': [[0, 1]]},\n    '(': {'points': [[2, 0], [2, 4], [1, 3], [1, 1]], 'lines': [[0, 3], [1, 2], [2, 3]]},\n    ')': {'points': [[1, 1], [1, 3], [0, 4], [0, 0]], 'lines': [[0, 1], [0, 3], [1, 2]]},\n    '*': {'points': [[1, 3], [1, 1], [0, 2], [2, 2], [0, 3], [2, 3], [0, 1], [2, 1]], 'lines': [[0, 1], [2, 3], [4, 7], [5, 6]]},\n    '+': {'points': [[2, 2], [0, 2], [1, 1], [1, 3]], 'lines': [[0, 1], [2, 3]]},\n    ',': {'points': [[0, 4], [1, 3]], 'lines': [[0, 1]]},\n    '-': {'points': [[2, 2], [0, 2]], 'lines': [[0, 1]]},\n    '.': {'points': [[1, 4], [1, 3], [0, 4]], 'lines': [[0, 2], [0, 1], [1, 2]]},\n    '/': {'points': [[2, 1], [0, 3]], 'lines': [[0, 1]]},\n    '0': {'points': [[2, 3], [2, 1], [0, 1], [0, 3], [1, 4], [1, 0]], 'lines': [[0, 4], [0, 1], [1, 3], [1, 5], [2, 3], [2, 5], [3, 4]]},\n    '1': {'points': [[0, 1], [0, 4], [2, 4], [1, 0], [1, 4]], 'lines': [[0, 3], [1, 2], [3, 4]]},\n    '2': {'points': [[0, 4], [2, 1], [1, 0], [2, 4], [0, 1]], 'lines': [[0, 3], [0, 1], [1, 2], [2, 4]]},\n    '3': {'points': [[1, 4], [1, 0], [0, 1], [0, 3], [1, 2], [2, 1], [2, 3]], 'lines': [[0, 3], [0, 6], [1, 2], [1, 5], [4, 5], [4, 6]]},\n    '4': {'points': [[0, 0], [2, 0], [2, 4], [0, 2], [2, 2]], 'lines': [[0, 3], [1, 2], [3, 4]]},\n    '5': {'points': [[2, 3], [1, 2], [0, 2], [0, 4], [2, 0], [1, 4], [0, 0]], 'lines': [[0, 5], [0, 1], [1, 2], [2, 6], [3, 5], [4, 6]]},\n    '6': {'points': [[1, 0], [0, 1], [2, 3], [1, 4], [0, 3], [1, 2]], 'lines': [[0, 1], [1, 4], [2, 5], [2, 3], [3, 4], [4, 5]]},\n    '7': {'points': [[1, 4], [2, 0], [0, 0]], 'lines': [[0, 1], [1, 2]]},\n    '8': {\n        'points': [[1, 2], [1, 4], [1, 0], [0, 1], [0, 3], [2, 1], [2, 3]],\n        'lines': [[0, 6], [0, 5], [0, 3], [0, 4], [1, 4], [1, 6], [2, 3], [2, 5]]\n    },\n    '9': {'points': [[1, 2], [2, 1], [1, 0], [0, 1], [2, 3], [1, 4]], 'lines': [[0, 1], [0, 3], [1, 2], [1, 4], [2, 3], [4, 5]]},\n    ':': {'points': [[1, 0], [1, 1], [1, 4], [1, 3]], 'lines': [[0, 1], [2, 3]]},\n    ';': {'points': [[1, 3], [0, 4], [1, 1], [1, 0]], 'lines': [[0, 1], [2, 3]]},\n    '<': {'points': [[2, 0], [2, 4], [0, 2]], 'lines': [[0, 2], [1, 2]]},\n    '=': {'points': [[2, 1], [0, 1], [2, 3], [0, 3]], 'lines': [[0, 1], [2, 3]]},\n    '>': {'points': [[2, 2], [0, 0], [0, 4]], 'lines': [[0, 1], [0, 2]]},\n    '?': {'points': [[1, 2], [2, 1], [0, 1], [1, 0], [1, 4], [1, 3]], 'lines': [[0, 1], [1, 3], [2, 3], [4, 5]]},\n    '@': {\n        'points': [[2, 1], [0, 1], [1, 0], [0, 3], [1, 4], [1, 2], [1, 3], [2, 2], [2, 3]],\n        'lines': [[0, 2], [1, 2], [1, 3], [3, 4], [4, 8], [5, 7], [5, 6], [6, 7], [7, 8]]\n    },\n    'A': {'points': [[2, 4], [1, 0], [0, 2], [0, 4], [2, 2]], 'lines': [[0, 4], [1, 2], [1, 4], [2, 4], [2, 3]]},\n    'B': {\n        'points': [[2, 3], [2, 1], [1, 2], [0, 4], [0, 0], [1, 0], [1, 4]],\n        'lines': [[0, 2], [0, 6], [1, 2], [1, 5], [3, 4], [3, 6], [4, 5]]\n    },\n    'C': {'points': [[2, 3], [2, 1], [0, 1], [0, 3], [1, 4], [1, 0]], 'lines': [[0, 4], [1, 5], [2, 3], [2, 5], [3, 4]]},\n    'D': {'points': [[1, 4], [1, 0], [0, 4], [0, 0], [2, 1], [2, 3]], 'lines': [[0, 2], [0, 5], [1, 3], [1, 4], [2, 3], [4, 5]]},\n    'E': {'points': [[2, 4], [2, 0], [2, 2], [0, 4], [0, 0], [0, 2]], 'lines': [[0, 3], [1, 4], [2, 5], [3, 4]]},\n    'F': {'points': [[0, 0], [0, 4], [2, 2], [2, 0], [0, 2]], 'lines': [[0, 3], [0, 1], [2, 4]]},\n    'G': {\n        'points': [[1, 2], [2, 2], [2, 1], [2, 3], [1, 0], [1, 4], [0, 3], [0, 1]],\n        'lines': [[0, 1], [1, 3], [2, 4], [3, 5], [4, 7], [5, 6], [6, 7]]\n    },\n    'H': {'points': [[2, 4], [2, 0], [0, 4], [0, 0], [0, 2], [2, 2]], 'lines': [[0, 1], [2, 3], [4, 5]]},\n    'I': {'points': [[0, 4], [2, 4], [0, 0], [2, 0], [1, 0], [1, 4]], 'lines': [[0, 1], [2, 3], [4, 5]]},\n    'J': {'points': [[2, 0], [2, 3], [1, 4], [0, 3]], 'lines': [[0, 1], [1, 2], [2, 3]]},\n    'K': {'points': [[0, 0], [0, 4], [2, 0], [2, 4], [0, 2]], 'lines': [[0, 1], [2, 4], [3, 4]]},\n    'L': {'points': [[0, 0], [2, 4], [0, 4]], 'lines': [[0, 2], [1, 2]]},\n    'M': {'points': [[2, 4], [0, 4], [1, 2], [0, 0], [2, 0]], 'lines': [[0, 4], [1, 3], [2, 3], [2, 4]]},\n    'N': {'points': [[2, 0], [2, 4], [0, 0], [0, 4]], 'lines': [[0, 1], [1, 2], [2, 3]]},\n    'O': {'points': [[1, 0], [1, 4], [0, 3], [0, 1], [2, 1], [2, 3]], 'lines': [[0, 3], [0, 4], [1, 2], [1, 5], [2, 3], [4, 5]]},\n    'P': {'points': [[1, 0], [0, 0], [0, 4], [1, 2], [2, 1], [0, 2]], 'lines': [[0, 1], [0, 4], [1, 2], [3, 4], [3, 5]]},\n    'Q': {\n        'points': [[2, 4], [2, 3], [2, 1], [0, 1], [0, 3], [1, 4], [1, 0]],\n        'lines': [[0, 5], [1, 5], [1, 2], [2, 6], [3, 4], [3, 6], [4, 5]]\n    },\n    'R': {'points': [[2, 4], [2, 1], [1, 2], [0, 4], [0, 0], [1, 0], [0, 2]], 'lines': [[0, 2], [1, 2], [1, 5], [2, 6], [3, 4], [4, 5]]},\n    'S': {'points': [[2, 3], [2, 1], [0, 1], [0, 3], [1, 4], [1, 0]], 'lines': [[0, 2], [0, 4], [1, 5], [2, 5], [3, 4]]},\n    'T': {'points': [[1, 4], [2, 0], [0, 0], [1, 0]], 'lines': [[0, 3], [1, 2]]},\n    'U': {'points': [[2, 3], [2, 0], [0, 0], [0, 3], [1, 4]], 'lines': [[0, 4], [0, 1], [2, 3], [3, 4]]},\n    'V': {'points': [[1, 4], [0, 1], [0, 0], [2, 0], [2, 1]], 'lines': [[0, 1], [0, 4], [1, 2], [3, 4]]},\n    'W': {'points': [[0, 4], [2, 4], [1, 2], [2, 0], [0, 0]], 'lines': [[0, 2], [0, 4], [1, 2], [1, 3]]},\n    'X': {'points': [[2, 0], [0, 0], [2, 4], [0, 4]], 'lines': [[0, 3], [1, 2]]},\n    'Y': {'points': [[1, 4], [1, 2], [0, 0], [2, 0]], 'lines': [[0, 1], [1, 2], [1, 3]]},\n    'Z': {'points': [[0, 0], [2, 4], [2, 0], [0, 4]], 'lines': [[0, 2], [1, 3], [2, 3]]},\n    '[': {'points': [[1, 0], [1, 4], [2, 4], [2, 0]], 'lines': [[0, 1], [0, 3], [1, 2]]},\n    '\\\\': {'points': [[2, 3], [0, 1]], 'lines': [[0, 1]]},\n    ']': {'points': [[0, 0], [0, 4], [1, 4], [1, 0]], 'lines': [[0, 3], [1, 2], [2, 3]]},\n    '^': {'points': [[0, 1], [2, 1], [1, 0]], 'lines': [[0, 2], [1, 2]]},\n    '_': {'points': [[0, 4], [2, 4]], 'lines': [[0, 1]]},\n    '`': {'points': [[0, 0], [1, 1]], 'lines': [[0, 1]]},\n    'a': {\n        'points': [[2, 4], [2, 3], [2, 2], [0, 2], [0, 3], [1, 4], [1, 1]],\n        'lines': [[0, 1], [1, 2], [1, 5], [2, 6], [3, 4], [3, 6], [4, 5]]\n    },\n    'b': {'points': [[1, 4], [0, 0], [0, 4], [1, 2], [2, 3], [0, 2]], 'lines': [[0, 2], [0, 4], [1, 2], [3, 4], [3, 5]]},\n    'c': {'points': [[1, 1], [1, 4], [0, 3], [0, 2], [2, 2], [2, 3]], 'lines': [[0, 3], [0, 4], [1, 2], [1, 5], [2, 3]]},\n    'd': {'points': [[0, 3], [1, 2], [2, 4], [2, 0], [1, 4], [2, 2]], 'lines': [[0, 1], [0, 4], [1, 5], [2, 4], [2, 3]]},\n    'e': {'points': [[2, 3], [2, 2], [0, 2], [0, 3], [1, 4], [1, 1]], 'lines': [[0, 4], [1, 2], [1, 5], [2, 3], [2, 5], [3, 4]]},\n    'f': {'points': [[2, 2], [1, 1], [1, 3], [0, 4], [0, 2], [0, 3]], 'lines': [[0, 1], [1, 4], [2, 5], [3, 4]]},\n    'g': {\n        'points': [[0, 5], [1, 6], [2, 5], [1, 1], [1, 4], [0, 3], [0, 2], [2, 2], [2, 3]],\n        'lines': [[0, 1], [1, 2], [2, 7], [3, 6], [3, 7], [4, 5], [4, 8], [5, 6]]\n    },\n    'h': {'points': [[2, 4], [0, 0], [0, 4], [1, 2], [2, 3], [0, 2]], 'lines': [[0, 4], [1, 2], [3, 4], [3, 5]]},\n    'i': {'points': [[1, 1], [1, 0], [1, 2], [2, 4], [0, 4], [1, 4]], 'lines': [[0, 1], [2, 5], [3, 4]]},\n    'j': {'points': [[1, 2], [1, 6], [0, 5], [2, 5], [2, 2]], 'lines': [[0, 4], [1, 3], [1, 2], [3, 4]]},\n    'k': {'points': [[2, 4], [0, 4], [0, 0], [2, 3], [2, 1], [1, 2], [0, 2]], 'lines': [[0, 3], [1, 2], [3, 5], [4, 5], [5, 6]]},\n    'l': {'points': [[0, 2], [2, 4], [0, 0]], 'lines': [[0, 1], [0, 2]]},\n    'm': {'points': [[0, 4], [2, 1], [1, 1], [1, 2], [2, 4], [0, 1], [0, 2]], 'lines': [[0, 5], [1, 3], [1, 4], [2, 3], [2, 6]]},\n    'n': {'points': [[2, 4], [0, 4], [1, 1], [2, 2], [0, 2], [0, 1]], 'lines': [[0, 3], [1, 4], [2, 3], [2, 4], [4, 5]]},\n    'o': {'points': [[2, 3], [2, 2], [0, 2], [0, 3], [1, 4], [1, 1]], 'lines': [[0, 4], [0, 1], [1, 5], [2, 3], [2, 5], [3, 4]]},\n    'p': {'points': [[2, 3], [1, 4], [0, 6], [0, 2], [1, 2], [0, 4]], 'lines': [[0, 1], [0, 4], [1, 5], [2, 3], [3, 4]]},\n    'q': {'points': [[1, 2], [2, 2], [2, 6], [1, 4], [0, 3], [2, 4]], 'lines': [[0, 1], [0, 4], [1, 2], [3, 4], [3, 5]]},\n    'r': {'points': [[0, 4], [0, 1], [1, 1], [2, 2], [0, 2]], 'lines': [[0, 1], [2, 3], [2, 4]]},\n    's': {'points': [[1, 1], [1, 4], [0, 3], [0, 2], [2, 2], [2, 3]], 'lines': [[0, 3], [0, 4], [1, 2], [1, 5], [3, 5]]},\n    't': {'points': [[1, 1], [0, 2], [2, 2], [1, 4]], 'lines': [[0, 3], [1, 2]]},\n    'u': {'points': [[1, 4], [0, 3], [0, 1], [2, 1], [2, 3]], 'lines': [[0, 1], [0, 4], [1, 2], [3, 4]]},\n    'v': {'points': [[2, 1], [0, 1], [1, 4]], 'lines': [[0, 2], [1, 2]]},\n    'w': {'points': [[2, 1], [2, 3], [0, 1], [1, 3], [0, 4], [1, 4]], 'lines': [[0, 1], [1, 5], [2, 4], [3, 4], [3, 5]]},\n    'x': {'points': [[2, 1], [0, 1], [1, 2], [0, 4], [2, 4], [1, 3]], 'lines': [[0, 2], [1, 2], [2, 5], [3, 5], [4, 5]]},\n    'y': {'points': [[2, 1], [0, 1], [1, 2], [1, 4]], 'lines': [[0, 2], [1, 2], [2, 3]]},\n    'z': {'points': [[0, 4], [2, 1], [2, 4], [0, 1]], 'lines': [[0, 1], [0, 2], [1, 3]]},\n    '{': {'points': [[1, 1], [1, 3], [0, 2], [2, 0], [2, 4], [1, 4], [1, 0]], 'lines': [[0, 2], [0, 6], [1, 2], [1, 5], [3, 6], [4, 5]]},\n    '|': {'points': [[1, 0], [1, 4]], 'lines': [[0, 1]]},\n    '}': {'points': [[1, 1], [1, 3], [2, 2], [1, 0], [1, 4], [0, 4], [0, 0]], 'lines': [[0, 2], [0, 3], [1, 2], [1, 4], [3, 6], [4, 5]]},\n    '~': {'points': [[1, 1], [1, 3], [2, 2], [0, 2]], 'lines': [[0, 1], [0, 3], [1, 2]]}\n}\n\nNPos3d.Layout = NPos3d.Layout || {}\n\nNPos3d.Layout.ResponsivePoint = function(args) {\n    var t = this, type = 'ResponsivePoint'\n    if (t.type !== type) {\n        throw type + ' must be invoked using the `new` keyword.'\n    }\n    args = args || {}\n    if (typeof args.offset !== 'undefined' && typeof args.offset.length !== 'number') { //does it smell like an array?\n        throw type + ' constructor MUST be provided an `offset` array argument'\n    }\n    if (\n        typeof args.scene === 'undefined' ||\n        typeof args.scene.type === 'undefined' ||\n        args.scene.type !== 'Scene'\n    ) {\n        throw type + ' constructor MUST be provided a `Scene` object argument'\n    }\n    t.offset = args.offset\n    t.scene = args.scene\n    t.scene.add(t) //adds itself to the scene automatically, because it needs the scene to work\n    t.update()\n    return t\n}\n\nNPos3d.Layout.ResponsivePoint.prototype = [] //it has to smell like a normal vertex\nNPos3d.Layout.ResponsivePoint.prototype.type = 'ResponsivePoint'\nNPos3d.Layout.ResponsivePoint.prototype.update = function() {\n    var that = this\n\n    if (that.offset[0] < 0) {\n        that[0] = that.scene.cx + that.offset[0]\n    } else if (that.offset[0] > 0) {\n        that[0] = that.offset[0] - that.scene.cx\n    } else {\n        that[0] = 0\n    }\n\n    if (that.offset[1] < 0) {\n        that[1] = that.scene.cy + that.offset[1]\n    } else if (that.offset[1] > 0) {\n        that[1] = that.offset[1] - that.scene.cy\n    } else {\n        that[1] = 0\n    }\n\n    that[2] = that.offset[2]\n    if (typeof that.offset[3] !== 'undefined') { //set the color property, if it's a vertex\n        that[3] = that.offset[3]\n        that.length = 4\n    } else {\n        that.length = 3\n    }\n}\nNPos3d.Scene.prototype.drawSprite = function(c, o) {\n    c.save()\n    c.translate(o.point2D.x, o.point2D.y)\n    if (o.depthScale) {\n        c.scale(o.spriteScale * o.point2D.scale, o.spriteScale * o.point2D.scale)\n    } else {\n        c.scale(o.spriteScale, o.spriteScale)\n    }\n    c.rotate(o.spriteRot)\n    if (o.numFrames > 1) {\n        o.frameState += 0.3\n        if (o.frameState >= o.numFrames) {\n            o.frameState = 0\n        }\n        c.drawImage(o.image, (o.width * Math.floor(o.frameState)), 0, o.width, o.height, o.offset.x, o.offset.y, o.width, o.height)\n    } else {\n        c.drawImage(o.image, o.offset.x, o.offset.y)\n    }\n    c.restore()\n}\nNPos3d.Scene.prototype.renderSprite = function(o) {\n    var t = this\n    o.updateMatrices()\n    if (o.loaded) {\n        //offset the points by the object's position\n        var p3 = o.gPos\n        if (p3[2] < t.camera.clipNear && p3[2] > t.camera.clipFar) {\n            o.point2D = t.camera.project3Dto2D(p3) //a convenience measure\n            //Just some basic positional culling... if it's not on screen, don't render it...\n            if (\n                (o.point2D.x + (o.offset.x * o.point2D.scale) < t.cx && o.point2D.x - (o.offset.x * o.point2D.scale) > -t.cx) &&\n                (o.point2D.y + (o.offset.y * o.point2D.scale) < t.cy && o.point2D.y - (o.offset.y * o.point2D.scale) > -t.cy)\n            ) {\n                t.renderInstructionList.push({\n                    method: t.drawSprite,\n                    args: o, //It just seemed silly to re-define all of the render args over again in a new object\n                    z: p3[2]\n                })\n            }\n        }\n    }\n}\nNPos3d.renderSpriteFunc = function() {\n    this.scene.renderSprite(this)\n}\n\nNPos3d.blessWithSpriteBase = function(o, config) {\n    if (!config.path) {\n        throw 'You MUST provide an image `path` value on sprite type objects!'\n    }\n\n    NPos3d.blessWith3DBase(o, config) //Add universal 3D properties to the object first\n\n    o.spriteRot = config.spriteRot || 0\n    o.spriteScale = config.spriteScale || 1\n    o.depthScale = config.depthScale || false //Default behavior: Act as a non-scaling billboard\n    o.numFrames = config.numFrames || 1\n    o.frameState = o.numFrames\n    o.width = 0\n    o.height = 0\n    o.loaded = false\n    o.image = new Image()\n    o.image.onload = function() {\n        o.width = o.image.width / o.numFrames\n        o.height = o.image.height\n        o.offset = {\n            x: -Math.round(o.width / 2),\n            y: -Math.round(o.height / 2)\n        }\n        o.boundingBox = [[o.offset.x, o.offset.y, -32], [-o.offset.x, -o.offset.y, 32]]\n        o.loaded = true\n        //console.log(t);\n    }\n    o.render = NPos3d.renderSpriteFunc\n    o.image.src = config.path\n    return o\n}\n\nNPos3d.Sprite3D = function(config) {\n    var t = this, type = 'Sprite3D'\n    if (t.type !== type) {\n        throw 'You must use the `new` keyword when invoking the ' + type + ' constructor.'\n    }\n    NPos3d.blessWithSpriteBase(t, config)\n    return t\n}\n\nNPos3d.Sprite3D.prototype = {\n    type: 'Sprite3D',\n    update: function() {\n    },\n    destroy: NPos3d.destroyFunc\n}\nNPos3d.Utils = NPos3d.Utils || {}\n\nNPos3d.Utils.Color = {\n    detectCSSColorType: function(string) {\n        if (string.indexOf('#') > -1) {\n            return 'hex'\n        } else if (string.toLowerCase().indexOf('rgb') > -1) {\n            return 'rgb'\n        } else if (string.toLowerCase().indexOf('hsl') > -1) {\n            return 'hsl'\n        } else if (string.toLowerCase().indexOf('hsv') > -1) {\n            return 'hsv'\n        }\n        return false\n    },\n    hexToDec: function(string) {\n        return parseInt(string, 16)\n    },\n    convertHexToRGBArray: function(string) {\n        var r, g, b, chars = string.split(''), h = NPos3d.Utils.Color.hexToDec\n        if (chars.length < 7) {\n            r = h('' + chars[1] + chars[1])\n            g = h('' + chars[2] + chars[2])\n            b = h('' + chars[3] + chars[3])\n        } else {\n            r = h('' + chars[1] + chars[2])\n            g = h('' + chars[3] + chars[4])\n            b = h('' + chars[5] + chars[6])\n        }\n        return [r, g, b]\n    },\n    parenColorToArray: function(string) {\n        return string.replace(/rgb|hsl|hsv|a|\\(|\\)|;|%| /g, '').split(',').map(function(v, k) {\n            if (k < 3) {\n                return parseInt(v)\n            } else {\n                return parseFloat(v)\n            }\n        })\n    },\n    rgbArrayToHLSArray: function(inp) {\n        var o = NPos3d.Utils.Color.rgbToHsl(inp[0], inp[1], inp[2])\n        o[0] *= 360\n        o[1] *= 100\n        o[2] *= 100\n        if (inp.length > 3) {\n            o.push(inp[3])\n        }\n        return o\n    },\n    hslArrayToRGBArray: function(inp) {\n        var o = NPos3d.Utils.Color.hslToRgb((inp[0] % 360) / 360, inp[1] / 100, inp[2] / 100), r = Math.round\n        o[0] = r(o[0])\n        o[1] = r(o[1])\n        o[2] = r(o[2])\n        if (inp.length > 3) {\n            o.push(inp[3])\n        }\n        return o\n    },\n    colorStringToHSLAArray: function(string) {\n        var t = NPos3d.Utils.Color, type = t.detectCSSColorType(string), nums = [], d\n        if (type === 'hex') {\n            d = t.convertHexToRGBArray(string)\n            d = t.rgbArrayToHLSArray(d)\n            nums.push(d[0], d[1], d[2], 1)\n        } else if (type === 'rgb') {\n            d = t.parenColorToArray(string)\n            d = t.rgbArrayToHLSArray(d)\n            nums.push(d[0], d[1], d[2], d[3] || 1)\n        } else if (type === 'hsl') {\n            d = t.parenColorToArray(string)\n            nums.push(d[0], d[1], d[2], d[3] || 1)\n        }\n        return nums\n    },\n    colorStringToHSLAString: function(string) {\n        var t = NPos3d.Utils.Color,\n            n = t.colorStringToHSLAArray(string),\n            output = ['hsla(', n[0] + ',', n[1] + '%,', n[2] + '%,', n[3], ');']\n        return output.join('')\n    },\n    colorStringToRGBAArray: function(string) {\n        var t = NPos3d.Utils.Color, type = t.detectCSSColorType(string), nums = [], d\n        if (type === 'hex') {\n            d = t.convertHexToRGBArray(string)\n            nums.push(d[0], d[1], d[2], 1)\n        } else if (type === 'hsl') {\n            d = t.parenColorToArray(string)\n            d = t.hslArrayToRGBArray(d)\n            nums.push(d[0], d[1], d[2], d[3] || 1)\n        } else if (type === 'rgb') {\n            d = t.parenColorToArray(string)\n            nums.push(d[0], d[1], d[2], d[3] || 1)\n        }\n        return nums\n    },\n    colorStringToRGBAString: function(string) {\n        var t = NPos3d.Utils.Color,\n            output = ['rgba(', t.colorStringToRGBAArray(string).join(), ');']\n        return output.join('')\n    },\n\n    //The following functions pulled from:\n    //http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n    /**\n     * Converts an RGB color value to HSL. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes r, g, and b are contained in the set [0, 255] and\n     * returns h, s, and l in the set [0, 1].\n     *\n     * @param   Number  r       The red color value\n     * @param   Number  g       The green color value\n     * @param   Number  b       The blue color value\n     * @return  Array           The HSL representation\n     */\n    rgbToHsl: function(r, g, b) {\n        r /= 255, g /= 255, b /= 255\n        var max = Math.max(r, g, b), min = Math.min(r, g, b)\n        var h, s, l = (max + min) / 2\n\n        if (max == min) {\n            h = s = 0 // achromatic\n        } else {\n            var d = max - min\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min)\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0)\n                    break\n                case g:\n                    h = (b - r) / d + 2\n                    break\n                case b:\n                    h = (r - g) / d + 4\n                    break\n            }\n            h /= 6\n        }\n\n        return [h, s, l]\n    },\n    /**\n     * Converts an HSL color value to RGB. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes h, s, and l are contained in the set [0, 1] and\n     * returns r, g, and b in the set [0, 255].\n     *\n     * @param   Number  h       The hue\n     * @param   Number  s       The saturation\n     * @param   Number  l       The lightness\n     * @return  Array           The RGB representation\n     */\n    hslToRgb: function(h, s, l) {\n        var r, g, b\n\n        if (s == 0) {\n            r = g = b = l // achromatic\n        } else {\n            function hue2rgb(p, q, t) {\n                if (t < 0) t += 1\n                if (t > 1) t -= 1\n                if (t < 1 / 6) return p + (q - p) * 6 * t\n                if (t < 1 / 2) return q\n                if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n                return p\n            }\n\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s\n            var p = 2 * l - q\n            r = hue2rgb(p, q, h + 1 / 3)\n            g = hue2rgb(p, q, h)\n            b = hue2rgb(p, q, h - 1 / 3)\n        }\n\n        return [r * 255, g * 255, b * 255]\n    }\n}\nNPos3d.Fx = NPos3d.Fx || {}\n\nNPos3d.Fx.Tween = function(args) {\n    let that = this\n\n    that.o = args.object\n    that.properties = args.properties\n    that.onUpdate = args.onUpdate || undefined\n    that.callback = args.callback || undefined\n    that.method = args.method || that.transitionLinear\n    that.frames = 1\n    that.frameState = 0\n    that.frac = 0\n    that.initialValues = {}\n    that.pos = [0, 0, 0] // required if the tween is to be in the scene's update queue\n\n    for (let p in that.properties) {\n        if (that.properties.hasOwnProperty(p)) {\n            let prop = that.properties[p]\n            if (prop.length !== undefined) { //if property is an array, clone it\n                that.initialValues[p] = that.o[p].slice(0)\n            } else {\n                that.initialValues[p] = that.o[p]\n            }\n        }\n    }\n    that.o.add(this)\n    return that\n}\n\nNPos3d.Fx.Tween.prototype = {\n    type: 'Tween',\n    transitionLinear: function(n) {\n        return n\n    },\n    update: function() {\n        var t = this\n        t.frac = t.method(t.frameState / t.frames)\n        for (var p in t.properties) {\n            if (t.properties.hasOwnProperty(p)) {\n                var prop = t.properties[p]\n                var init = t.initialValues[p]\n                if (prop.length !== undefined) { //if property is an array, loop through it\n                    for (var i = 0; i < prop.length; i += 1) {\n                        t.o[p][i] = init[i] + ((prop[i] - init[i]) * t.frac)\n                    }\n                } else {\n                    t.o[p] = init + ((prop - init) * t.frac)\n                }\n            }\n        }\n        if (t.onUpdate !== undefined) {\n            t.onUpdate(t)\n        }\n        t.frameState += 1\n        if (t.frameState > t.frames) {\n            if (t.callback !== undefined) {\n                t.callback(t)\n            }\n            t.o.remove(t)\n        }\n    }\n}\nNPos3d.Fx = NPos3d.Fx || {}\n\nNPos3d.Fx.Explosion = function(args) {\n    var t = this, type = 'Explosion'\n    if (t.type !== type) {\n        throw 'You must use the `new` keyword when invoking the ' + type + ' constructor.'\n    }\n    if (NPos3d.Utils === undefined || NPos3d.Utils.Color === undefined) {\n        throw 'Please load the `NPos3d.Utils.Color` library prior to invoking the NPos3d.Fx.Explosion effects.'\n    }\n    args = args || {}\n    //NPos3d.blessWith3DBase(t,args);\n    if (!args.object || !args.object.shape.lines || !args.object.transformedPointCache) {\n        throw 'Fx.Explosion requires an Ob3D as the value for the `object` argument in the passed configuration object.'\n    }\n    if (!args.scene || args.scene.type !== 'Scene') {\n        throw 'Fx.Explosion requires a Scene as the value for the `scene` argument in the passed configuration object.'\n    }\n    t.o = args.object\n    args.scene.add(t)\n    return t\n}\n\nNPos3d.Fx.Explosion.prototype = {\n    type: 'Explosion',\n    update: function() {\n        var t = this\n        t.lines = t.o.shape.lines\n        t.points = t.o.getTransformedPoints()\n        //console.log(t);\n        t.lines.forEach(function(line) {\n            var p1 = t.points[line[0]],\n                p2 = t.points[line[1]],\n                color = line[2] || t.o.shape.color || t.o.color || t.scene.strokeStyle\n            t.scene.add(new NPos3d.Fx.ExplosionLine({\n                p1: p1,\n                p2: p2,\n                object: t.o,\n                scene: t.scene,\n                colorArray: NPos3d.Utils.Color.colorStringToRGBAArray(color)\n            }))\n        })\n        t.o.destroy()\n        t.destroy()\n    },\n    destroy: NPos3d.destroyFunc\n}\n\nNPos3d.Fx.ExplosionLine = function(args) {\n    var t = this, type = 'ExplosionLine'\n    if (t.type !== type) {\n        throw 'You must use the `new` keyword when invoking the ' + type + ' constructor.'\n    }\n    args = args || {}\n    args.shape = {}\n    NPos3d.blessWith3DBase(t, args)\n    t.o = args.object\n    t.scene = args.scene\n    t.pos = t.o.gPos.slice(0)\n    t.p1 = t.subVel(args.p1.slice(0), t.pos) //cloning the points\n    t.p2 = t.subVel(args.p2.slice(0), t.pos)\n    t.midpoint = t.getMidpoint()\n    t.addVel(t.pos, t.midpoint)\n    t.subVel(t.p1, t.midpoint)\n    t.subVel(t.p2, t.midpoint)\n    t.shape.points = [t.p1, t.p2]\n    t.shape.lines = [[0, 1]]\n    t.colorArray = args.colorArray\n    t.vel = args.vel || [t.rint(2), t.rint(2), t.rint(2)]\n    t.rotVel = args.rotVel || [t.rneg(2) * deg, t.rneg(2) * deg, t.rneg(2) * deg]\n    t.lifespan = 50 + t.rint(100)\n    t.life = t.lifespan\n    t.scene.add(t)\n    return t\n}\n\nNPos3d.Fx.ExplosionLine.prototype = {\n    type: 'ExplosionLine',\n    rneg: function(num) {\n        return ((Math.random() * 2) - 1) * num\n    },\n    rint: function(num) {\n        return Math.round(((Math.random() * 2) - 1) * num)\n    },\n    rpos: function(n) {\n        return Math.random() * n\n    },\n    rintpos: function(n) {\n        return Math.round(Math.random() * n)\n    },\n    getMidpoint: function() {\n        var t = this\n        var length = [\n            t.p2[0] - t.p1[0],\n            t.p2[1] - t.p1[1],\n            t.p2[2] - t.p1[2]\n        ]\n        length[0] /= 2\n        length[1] /= 2\n        length[2] /= 2\n        length[0] += t.p1[0]\n        length[1] += t.p1[1]\n        length[2] += t.p1[2]\n        return length\n    },\n    addVel: function(o, v) {\n        o[0] += v[0]\n        o[1] += v[1]\n        o[2] += v[2]\n        return o\n    },\n    subVel: function(o, v) {\n        o[0] -= v[0]\n        o[1] -= v[1]\n        o[2] -= v[2]\n        return o\n    },\n    update: function() {\n        var t = this, ca = t.colorArray\n        t.addVel(t.pos, t.vel)\n        t.addVel(t.rot, t.rotVel)\n        t.color = ['rgba(', ca[0], ',', ca[1], ',', ca[2], ',', (ca[3] * (t.life / t.lifespan)), ')'].join('')\n        t.life -= 1\n        if (t.life < 1) {\n            t.destroy()\n        }\n    }\n}\nNPos3d.Geom.Circle = function(args) {\n    var t = this, type = 'Circle'\n    if (t.type !== type) {\n        throw 'You must use the `new` keyword when invoking the ' + type + ' constructor.'\n    }\n    args = args || {}\n    t.color = args.color || undefined\n    t.segments = args.segments || 12\n    t.offset = args.offset || 0\n    t.points = []\n    t.lines = []\n    t.radius = args.radius || 20\n    t.axies = args.axies || [0, 1, 2]\n    t.formCircle()\n    return t\n}\nNPos3d.Geom.Circle.prototype = {\n    type: 'Circle',\n    formCircle: function() {\n        var t = this,\n            m = NPos3d.Maths,\n            slice = m.tau / t.segments,\n            i, point, angle\n        t.points = []\n        t.lines = []\n        for (i = 0; i < t.segments; i += 1) {\n            point = []\n            angle = (slice * i) + t.offset\n            //relative x\n            point[t.axies[0]] = m.cos(angle) * t.radius\n            //relative y\n            point[t.axies[1]] = m.sin(angle) * t.radius\n            //relative z\n            point[t.axies[2]] = 0\n            t.points.push(point)\n            //creates the line between the current point and the previous point\n            if (i > 0 && i <= t.segments) {\n                t.lines.push([i - 1, i]) //,'#0f0'\n                //closes the gap between the first point and the ending point\n                if (i === t.segments - 1) {\n                    t.lines.push([i, 0]) //,'#f0f'\n                }\n            }\n        }\n        return t\n    }\n}\nNPos3d.Geom.Sphere = function(args) {\n    var o = {}//Output\n    args = args || {}\n    o.color = args.color || undefined\n    o.points = []\n    o.lines = []\n    o.order = args.order || 'xzy'\n    var radius = args.radius || 20\n    var segments = args.segments || 12\n    var rad = tau / segments\n    var rings = args.rings || 8\n    var sliceWidth = pi / (rings - 1)\n    var pointNum = 0\n    var point = 0\n    for (var ring = 0; ring < rings; ring += 1) {\n        var z = (Math.cos(sliceWidth * ring) * (radius))\n        if (ring === 0 || ring === (rings - 1)) {\n            if (o.order === 'xyz' || o.order === 'yxz') {\n                o.points.push([0, 0, z])\n            } else if (o.order === 'xzy' || o.order === 'yzx') {\n                o.points.push([0, z, 0])\n            } else if (o.order === 'zxy' || o.order === 'zyx') {\n                o.points.push([z, 0, 0])\n            }\n            pointNum = o.points.length - 1\n            if (ring === (rings - 1)) {\n                for (point = 0; point < segments; point += 1) {\n                    o.lines.push([(pointNum - point - 1), pointNum]) //,'#0f0'\n                }\n            }\n        } else {\n            var amp = Math.sin(sliceWidth * ring) * radius\n            for (point = 0; point < segments; point += 1) {\n                var x = Math.sin(rad * point) * amp\n                var y = Math.cos(rad * point) * amp\n\n                if (o.order === 'xyz') {\n                    o.points.push([x, y, z])\n                } else if (o.order === 'xzy') {\n                    o.points.push([x, z, y])\n                } else if (o.order === 'zyx') {\n                    o.points.push([z, y, x])\n                } else if (o.order === 'zxy') {\n                    o.points.push([z, x, y])\n                } else if (o.order === 'yxz') {\n                    o.points.push([y, x, z])\n                } else if (o.order === 'yzx') {\n                    o.points.push([y, z, x])\n                }\n                pointNum = o.points.length - 1\n\n                //creates the line between this point and the last\n                if (pointNum < segments + 1) {\n                    o.lines.push([0, pointNum]) //,'#0f0'\n                }\n\n                //draws the rings...\n                if (pointNum > 1 && point > 0) {\n                    o.lines.push([pointNum - 1, pointNum]) //,'#00f'\n                }\n\n                //closes the gap between the first point in a ring and the last\n                if (point === segments - 1) {\n                    o.lines.push([pointNum - (segments - 1), pointNum]) //,'#f0f'\n                }\n\n                //draws the rings...\n                if (pointNum > segments) {\n                    o.lines.push([pointNum - segments, pointNum])\n                }\n\n                //if(pointNum > segments){\n                //s.lines.push([pointNum,]);\n            }\n        }\n    }\n    return o\n}\nNPos3d.Geom.Lathe = function(args) {\n    var t = this, type = 'Lathe'\n    if (t.type !== type) {\n        throw type + ' constructor requires the use of the `new` keyword.'\n    }\n    if (\n        typeof args.shape !== 'object' ||\n        typeof args.shape.points !== 'object' ||\n        typeof args.shape.points.length !== 'number'\n    ) {\n        throw type + ' constructor requires the that the configuration object contains a `shape` property containing an object with a `points` array.'\n    }\n    t.shape = args.shape\n    t.axis = args.axis === 0 ? 0 : args.axis || 1\n    t.segments = args.segments || 12\n    t.frac = args.frac || tau\n    t.points = []\n    t.lines = []\n    t.generate()\n}\n\nNPos3d.Geom.Lathe.prototype = {\n    type: 'Lathe',\n    generate: function() {\n        var t = this, m = NPos3d.Maths,\n            segment, segmentAngle = t.frac / parseInt(t.segments), segmentEuler = [0, 0, 0], segmentMatrix = m.makeMat4(),\n            pointIndex, pointNum = t.shape.points.length, point,\n            lineIndex, lineNum = t.shape.lines.length, line\n        t.points.length = 0\n        t.lines.length = 0\n        for (segment = 0; segment < t.segments; segment += 1) {\n            segmentEuler[t.axis] = segmentAngle * segment\n            m.eulerToMat4(segmentEuler, [0, 1, 2], segmentMatrix)\n            for (pointIndex = 0; pointIndex < pointNum; pointIndex += 1) {\n                point = t.shape.points[pointIndex]\n                t.points.push(m.p3Mat4Mul(point, segmentMatrix))\n                if (t.shape.lines.length > 0) {\n                    if (segment > 0) {\n                        t.lines.push([\n                            (segment * pointNum) + pointIndex,\n                            ((segment - 1) * pointNum) + pointIndex\n                        ])\n                    }\n                    if (segment === t.segments - 1) {\n                        t.lines.push([\n                            (segment * pointNum) + pointIndex,\n                            pointIndex\n                        ])\n                    }\n                }\n            }\n            for (lineIndex = 0; lineIndex < lineNum; lineIndex += 1) {\n                line = t.shape.lines[lineIndex]\n                t.lines.push([\n                    (segment * pointNum) + line[0],\n                    (segment * pointNum) + line[1]\n                ])\n            }\n        }\n\n    }\n}\nNPos3d.Geom.Twist = function(args) {\n    var t = this, type = 'Twist'\n    if (t.type !== type) {\n        throw type + ' constructor requires the use of the `new` keyword.'\n    }\n    if (\n        typeof args.shape !== 'object' ||\n        typeof args.shape.points !== 'object' ||\n        typeof args.shape.points.length !== 'number'\n    ) {\n        throw type + ' constructor requires the that the configuration object contains a `shape` property containing an object with a `points` array.'\n    }\n    t.shape = args.shape\n    if (args.axis === 0) {\n        t.axis = 0\n    } else {\n        t.axis = args.axis || 1 //y axis\n    }\n    t.points = []\n    //in radians\n    t.factor = args.factor === 0 ? 0 : args.factor || tau\n    //in radians\n    t.offset = args.offset || 0\n    //TODO: implement limits!\n    //t.limitUpper = args.limitUpper || 0;\n    //t.limitLower = args.limitLower || 1;\n    t.generate()\n}\n\nNPos3d.Geom.Twist.prototype = {\n    type: 'Twist',\n    generate: function() {\n        var t = this,\n            m = NPos3d.Maths,\n            boundingBox = m.nGetBounds(t.shape.points),\n            length = boundingBox[1][t.axis] - boundingBox[0][t.axis],\n            pointIndex, pointNum = t.shape.points.length, point,\n            axisProgression,\n            twistEuler = [0, 0, 0],\n            twistMatrix = m.makeMat4()\n        t.points.length = 0\n        for (pointIndex = 0; pointIndex < pointNum; pointIndex += 1) {\n            point = t.shape.points[pointIndex].slice()\n            axisProgression = ((point[t.axis] - boundingBox[0][t.axis]) / length) + t.offset\n            twistEuler[t.axis] = axisProgression * t.factor\n            m.eulerToMat4(twistEuler, [0, 1, 2], twistMatrix)\n            m.p3Mat4Mul(point, twistMatrix, point)\n            t.points.push(point)\n        }\n        if (t.shape.lines !== undefined) {\n            t.lines = t.shape.lines.slice()\n        }\n        //console.log(t.factor, twistEuler[t.axis]);\n    }\n}\n\nexport default NPos3d"]}