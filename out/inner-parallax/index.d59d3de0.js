!function(){function n(n){return n.getBoundingClientRect().top+window.scrollY}function r(n){if(this instanceof r){if(this.container=n,!this.container)return;return this.init()}}r.prototype={constructor:r,init:function(){var n=this;n.needRedraw=!0,n.bg=n.container.querySelector("[data-inner-parallax-bg]"),window.addEventListener("resize",n.resize.bind(n)),n.resize()},resize:function(){var r,e,t,i,a,o,s=this;s.containerHeight=s.container.offsetHeight,s.startPoint=n(s.container)-window.innerHeight,s.endPoint=n(s.container)+s.containerHeight,s.getProgress=(r=s.startPoint,e=-.5,t=s.endPoint,o=(.5-e)/(t-r),function(n){var t=o*(n-r)+e;return null!=i&&t<i&&(t=i),null!=a&&t>a&&(t=a),t}),s.bgHeight=s.bg.offsetHeight,s.parallaxDist=s.bgHeight-s.containerHeight,s.progress=s.getProgress(window.scrollY)},update:function(n){var r=this;r.progress=r.getProgress(window.scrollY);var e=r.progress>-.5&&r.progress<.5,t=r.progress!==r.lastProgress;e&&t?(r.needRedraw=!0,r.y=r.parallaxDist*r.progress*2.2):r.needRedraw=!1,r.lastProgress=r.progress},drawParallax:function(){this.bg.style.transform=`translate3d(0, ${this.y}px, 0`}},initInnerParallax=function(){var n=[];document.querySelectorAll("[data-inner-parallax]").forEach((function(e){n.push(new r(e))})),function r(){requestAnimationFrame(r);var e=window.scrollY;n.forEach((function(n){n.update(e),n.needRedraw&&requestAnimationFrame((function(){n.drawParallax()}))}))}()},window.addEventListener("load",initInnerParallax)}();
//# sourceMappingURL=index.d59d3de0.js.map
